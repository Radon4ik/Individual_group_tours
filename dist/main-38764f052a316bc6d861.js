(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,s=new Array(t);n<t;n++)s[n]=e[n];return s}function n(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function s(e={},t={}){Object.keys(t).forEach((i=>{void 0===e[i]?e[i]=t[i]:n(t[i])&&n(e[i])&&Object.keys(t[i]).length>0&&s(e[i],t[i])}))}e.d({},{s:()=>ie}),document.addEventListener("DOMContentLoaded",(function(){var e={uk:{"hero.list.item.aboutme":"–ü—Ä–æ –º–µ–Ω–µ","hero.list.item.aboutpay":"–Ø–∫ –æ–ø–ª–∞—á—É–≤–∞—Ç–∏","hero.list.item.reviews":"–í—ñ–¥–≥—É–∫–∏","hero.list.item.blogs":"–ë–ª–æ–≥","hero.list.item.contact":"–ö–æ–Ω—Ç–∞–∫—Ç–∏","hero.txt":"–í–∞—à —Ç—Ä–µ–≤–µ–ª –∞–≥–µ–Ω—Ç","hero.title":"–¢–µ—Ç—è–Ω–∞ –õ–æ–º–∞–∫—ñ–Ω–∞","hero.description":"–ó–Ω–∞—Ö–æ–¥–∂—É –Ω–∞–π–∫–æ—Ä–æ—Ç—à–∏–π —à–ª—è—Ö –≤—ñ–¥ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è ¬´–¥–µ –≤—ñ–¥–ø–æ—á–∏—Ç–∏¬ª –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ!","hero.link.btn":"–ü—ñ–¥–±—ñ—Ä —Ç–∞ —Å—É–ø—Ä–æ–≤–æ–¥–∂–µ–Ω–Ω—è –≤–∞—à–æ—ó –ø–æ–¥–æ—Ä–æ–∂—ñ!","about.aboutme":"–ü—Ä–æ –º–µ–Ω–µ","about.list.item.aboutme":"–í—ñ—Ç–∞—é –í–∞—Å, –¥–æ—Ä–æ–≥–∏–π –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á —Å–∞–π—Ç—É! –ú–µ–Ω–µ –∑–≤—É—Ç—å –¢–µ—Ç—è–Ω–∞ –õ–æ–º–∞–∫—ñ–Ω–∞. –Ø –∑–∞–π–º–∞—é—Å—è —Ç—É—Ä–∏—Å—Ç–∏—á–Ω–æ—é –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—é –∑ 2000 —Ä–æ–∫—É. –¢–æ–±—Ç–æ, –º—ñ–π –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –±—ñ–ª—å—à–µ 20 —Ä–æ–∫—ñ–≤.","about.list.item.agency":"–ó –±–µ—Ä–µ–∑–Ω—è 2013 —Ä–æ–∫—É —è –ø—Ä–∞—Ü—é—é —è–∫ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –ø—ñ–¥–ø—Ä–∏—î–º–µ—Ü—å - –ê–≥–µ–Ω—Ü—ñ—è IGtours (Individual & Group tours).","about.list.item.description":"–ó–∞ —Ü–µ–π —á–∞—Å –≤—Å—Ç–∏–≥–ª–∞ –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ 37 –∫—Ä–∞—ó–Ω —Ç–∞ –¥–µ—è–∫—ñ –Ω–µ –æ–¥–∏–Ω —Ä–∞–∑. –Ø –¥—É–∂–µ –ª—é–±–ª—é —Å–≤–æ—é —Ä–æ–±–æ—Ç—É —Ç–∞ –ª—é–±–ª—é –ª—é–¥–µ–π, –ø–æ—Å—Ç—ñ–π–Ω–æ –ø—Ä–∞—Ü—é—é –Ω–∞–¥ —Å–æ–±–æ—é —Ç–∞ –≤–¥–æ—Å–∫–æ–Ω–∞–ª—é—é —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è.","about.list.item.partnership":"–ó –±–∞–≥–∞—Ç—å–º–∞ –∫–ª—ñ—î–Ω—Ç–∞–º–∏ –ø—ñ–¥—Ç—Ä–∏–º–∞—î–º–æ –¥—Ä—É–∂–Ω—ñ —Å—Ç–æ—Å—É–Ω–∫–∏ i –≤ –Ω–∞—Å –≤–∂–µ —Å–ø—ñ–≤—Ç–æ–≤–∞—Ä–∏—Å—Ç–≤–æ! üôÇ","about.list.item.mission":"–û—Å–Ω–æ–≤–Ω–∞ –º–æ—è –º—ñ—Å—ñ—è - –Ω–∞–π—Ç–∏ –∫–æ—Ä–æ—Ç—à–∏–π —à–ª—è—Ö –≤—ñ–¥ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –¥–µ –≤—ñ–¥–ø–æ—á–∏—Ç–∏- –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ! –î–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, —è–∫–∞ –∑–∞–¥–æ–≤–æ–ª—å–Ω–∏—Ç—å –∑–∞–º–æ–≤–Ω–∏–∫–∞ —Ç–∞ –∑—Ä–æ–±–∏—Ç—å —â–∞—Å–ª–∏–≤–∏–º–∏ –æ–±–∏–¥–≤—ñ —Å—Ç–æ—Ä–æ–Ω–∏ üôÇ!","about.list.item.wishes":"–ö–æ–∂–Ω–∞ –Ω–æ–≤–∞ –ø–æ–¥–æ—Ä–æ–∂ —Ä–æ–±–∏—Ç—å –Ω–∞—Å —Ç—Ä–æ—à–∫–∏ —ñ–Ω—à–∏–º–∏. –¢–æ –Ω–µ—Ö–∞–π –º–∏ –±—É–¥–µ–º–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–∞ –∫—Ä–∞—â–µ!","payment.title.pay":"–Ø–∫ –æ–ø–ª–∞—á—É–≤–∞—Ç–∏","payment.list.item.pay":"–ü—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –º–∏ –∑–Ω–∞–π—à–ª–∏ –Ω–∞–π–∫—Ä–∞—â–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É, –≤–∏–Ω–∏–∫–∞—î –ø–∏—Ç–∞–Ω–Ω—è –π–æ–≥–æ –æ–ø–ª–∞—Ç–∏.","payment.list.item.aboutpay":"–û–ø–ª–∞—Ç–∞ –∑–∞ —Ç—É—Ä –ø—Ä–∏–π–º–∞—î—Ç—å—Å—è –≤–∏–∫–ª—é—á–Ω–æ –≤ –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ–π –≤–∞–ª—é—Ç—ñ (–≥—Ä–∏–≤–Ω—è). –î–ª—è –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏—Ö –∫–∞—Ä—Ç–æ–∫, –Ω–æ–º—ñ–Ω–æ–≤–∞–Ω–∏—Ö –≤ —ñ–Ω—à–∏—Ö –≤–∞–ª—é—Ç–∞—Ö –∫—É—Ä—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –ø–ª–∞—Ç—ñ–∂–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é —Ç–∞ –í–∞—à–∏–º –±–∞–Ω–∫–æ–º.","payment.list.item.qr":"–ß–∏ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å \n    QR code (—á–µ—Ä–µ–∑ –ü—Ä–∏–≤–∞—Ç24)","payment.list.item.transfer":"–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –∫–æ–º–ø–∞–Ω—ñ—ó IGTours","payment.list.item.transfer.provider":"–ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫: –§–û–ü –õ–æ–º–∞–∫—ñ–Ω–∞ –¢–µ—Ç—è–Ω–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä—ñ–≤–Ω–∞","payment.list.item.transfer.check":"–†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫: UA613052990000026009050251687","payment.list.item.transfer.bank":"–ë–∞–Ω–∫: –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫, –ú–§–û: 305299","payment.list.item.transfer.number":"–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø–æ–¥–∞—Ç–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä (–Ü–ü–ù): 2646412208","payment.list.item.transfer.phone":"–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω:","reviews.title":"–í—ñ–¥–≥—É–∫–∏","blogs.title":"–ë–ª–æ–≥","footer.contact":"–ö–æ–Ω—Ç–∞–∫—Ç–∏:","swiper.description":"–ë–µ–∑—É–º–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç—É—Ä! –°–ø–∞—Å–∏–±–æ –û–ì–†–û–ú–ù–û–ï! –í—Å–µ–º —Å–æ–≤–µ—Ç—É—é!","swiper.time":"–ê–≤–≥—É—Å—Ç 2017","blogs.text.spices":"–Ø –¥–∞–≤–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—É–≤–µ–Ω–∏—Ä–æ–≤ –∏ –º–µ–ª–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤\n    —Å–≤–æ–∏–º –º–Ω–æ–≥–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º –∏ –¥—Ä—É–∑—å—è–º –ø—Ä–∏–≤–æ–∑–∏—Ç—å\n    –º–∞–≥–Ω–∏—Ç–∏–∫–∏. –í–º–µ—Å—Ç–æ –ø–∞–º—è—Ç–Ω—ã—Ö –º–∞–≥–Ω–∏—Ç–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω —è\n    —Å—Ç–∞–ª–∞ –ø—Ä–∏–≤–æ–∑–∏—Ç—å —Å–ø–µ—Ü–∏–∏. –ù–µ –Ω–æ–≤–æ—Å—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Å–ø–µ—Ü–∏–∏\n    ¬´–¥–µ–ª–∞—é—Ç¬ª –∫—É—Ö–Ω—é! –ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–ª—é–¥ –≤ —Ä–∞–∑–Ω—ã—Ö\n    —Å—Ç—Ä–∞–Ω–∞—Ö –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –Ω–æ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–µ—Ü–∏—è–º–∏ –æ–¥–Ω–æ –∏\n    —Ç–æ –∂–µ –±–ª—é–¥–æ ¬´–∑–≤—É—á–∏—Ç¬ª –ø–æ-—Ä–∞–∑–Ω–æ–º—É! –í–æ—Ç –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ª–µ–≥–∫–æ\n    –∏ –ø—Ä–∏—è—Ç–Ω–æ –¥–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Ä–æ–≥–∏–º —Å–µ—Ä–¥—Ü—É –ª—é–¥—è–º\n    –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω—É –Ω–∞ –≤–∫—É—Å, —è –∏ –≤—ã–≤–µ–ª–∞ —Ñ–æ—Ä–º—É–ª—É\n    –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å—É–≤–µ–Ω–∏—Ä–∞. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–∞\n    –ø–æ–ª–∫–∞—Ö –Ω–∞—à–∏—Ö –º–µ—Å—Ç–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –æ–≥—Ä–æ–º–Ω—ã–π –≤—ã–±–æ—Ä —Å–ø–µ—Ü–∏–π –∏ –Ω–µ—Ç\n    —Å–º—ã—Å–ª–∞ –≤–µ–∑—Ç–∏ –∏—Ö –∏–∑-–∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã - —Å–æ–≥–ª–∞—à—É—Å—å, –Ω–æ —Ç–æ–ª—å–∫–æ\n    –æ—Ç—á–∞—Å—Ç–∏. –î–∞ –∏ –¥–µ–ª–æ –≤–µ–¥—å –∏–º–µ–Ω–Ω–æ –≤ –ø—Ä–∏—è—Ç–Ω—ã—Ö –º–µ–ª–æ—á–∞—Ö, –∏–∑\n    –∫–æ—Ç–æ—Ä—ã—Ö, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –∏ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—à–∞ –∂–∏–∑–Ω—å))) –ò—Ç–∞–∫: —á—Ç–æ\n    –æ—Ç–∫—É–¥–∞ –≤–µ–∑—ë–º? –ò–∑ –í–µ–Ω–≥—Ä–∏–∏, –∫–æ–Ω–µ—á–Ω–æ, –ø–∞–ø—Ä–∏–∫—É. –ò–∑ –ì—Ä–µ—Ü–∏–∏,\n    –ö–∏–ø—Ä–∞, –ò—Ç–∞–ª–∏–∏ - –º–∞—Å—Å–∞ –≥–æ—Ç–æ–≤–æ–≥–æ —Ä–∞–∑–Ω–æ—Ç—Ä–∞–≤—å—è –≤\n    —Ä–∞–∑–Ω–æ–∫–∞–ª–∏–±–µ—Ä–Ω—ã—Ö —Ä–∞—Å—Ñ–∞—Å–æ–≤–∫–∞—Ö (–≤—ã–±–∏—Ä–∞–π—Ç–µ —É–∂–µ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É\n    —Ü–µ–Ω–∞-–∫–∞—á–µ—Å—Ç–≤–æ, –±–ª–∞–≥–æ, –≤—ã–±–æ—Ä –æ–≥—Ä–æ–º–µ–Ω –∏ —É—Å—ë –≤–∫—É—Å–Ω–æ–µ!)\n    –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–±–∞–≤–∫–∞ –∫ –±–æ–ª–≥–∞—Ä—Å–∫–∏–º —Å–∞–ª–∞—Ç–∞–º - —ç—Ç–æ —à–∞—Ä–µ–Ω–∞ —Å–æ–ª—å\n    (–ø—ë—Å—Ç—Ä–∞—è —Å–æ–ª—å - —Å–º–µ—Å—å –º–µ–ª–∫–æ–π —Å–æ–ª–∏ –∏ —Å–ø–µ—Ü–∏–π, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–Ω–æ\n    —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –∫—Ä–∞—Å–Ω—ã–π –º–æ–ª–æ—Ç—ã–π –ø–µ—Ä–µ—Ü –∏ —á–µ–±—Ä–µ—Ü). –í–∫—É—Å –Ω–∞\n    –ª—é–±–∏—Ç–µ–ª—è, –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ –º–Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è. –ò–∑ –¢–∞–∏–ª–∞–Ω–¥–∞\n    –ø—Ä–∏–≤–æ–∑–∏–ª–∞ —Å—É—Ö–æ–π –ª–µ–º–æ–Ω–≥—Ä–∞—Å—Å - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ç–æ–º–∞—Ç–Ω—ã–π —Å—É–ø\n    - –º–º–º–º - –æ–±—ä–µ–¥–µ–Ω–∏–µ! –Ω–∞–ø–æ–º–∏–Ω–∞—é, –Ω–∞ –ª—é–±–∏—Ç–µ–ª—è)) –ú–æ–∂–Ω–æ\n    –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–ø–µ—Ü–∏–∏\n    –Ω–∞ –º–µ—Å—Ç–µ –∏ —É–∂–µ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ - —ç—Ç–æ –í–∞—à –≤—ã–±–æ—Ä, –Ω–æ –ø–æ–¥–∞—Ä–æ–∫\n    –≤—ã—Ö–æ–¥–∏—Ç —Å–ª–∞–≤–Ω—ã–π.","blogs.text.history":"–Ø –≤—Å–µ–≥–¥–∞ –ª—é–±–∏–ª–∞ –∏—Å—Ç–æ—Ä–∏—é‚Ä¶–ò—Å—Ç–æ—Ä–∏—é, –∫–∞–∫ –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π\n    –ø—Ä–µ–ø–æ–¥–∞—é—Ç –∏ –∏—Å—Ç–æ—Ä–∏–∏, –∫–∞–∫ —Ä–∞—Å—Å–∫–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–≤–ª–µ–∫–∞—é—Ç –∏\n    —É–Ω–æ—Å—è—Ç –≤ –ø—Ä–æ—à–ª–æ–µ. –ù–æ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è, –≤ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ\n    –æ–∫—É–Ω—É—Ç—å—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –µ—ë —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫—É! –ß–µ—Å—Ç—å\n    –∏ —Ö–≤–∞–ª–∞ –∞—Ä—Ö–µ–æ–ª–æ–≥–∞–º! –†–∞—Å–∫–æ–ø–∫–∏ –Ω–∞—á–∞–ª–∏—Å—å –≤ 1869 –≥–æ–¥—É –∏\n    –≤–µ–¥—É—Ç—Å—è –¥–æ —Å–∏—Ö –ø–æ—Ä! –≠—Ñ–µ—Å - –∞–Ω—Ç–∏—á–Ω—ã–π –≥–æ—Ä–æ–¥ –≤ —Ç—É—Ä–µ—Ü–∫–æ–º\n    –≠–≥–µ–π—Å–∫–æ–º —Ä–µ–≥–∏–æ–Ω–µ –±–ª–∏–∑ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –°–µ–ª—å—á—É–∫.\n    –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –≤ —Ö–æ–¥–µ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å–∫–æ–ø–æ–∫ —Ä—É–∏–Ω—ã\n    –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–æ—Å–ª–µ–¥–∏—Ç—å –µ–≥–æ –∏—Å—Ç–æ—Ä–∏—é —Å–æ –≤—Ä–µ–º–µ–Ω –î—Ä–µ–≤–Ω–µ–π –ì—Ä–µ—Ü–∏–∏\n    –∏ –†–∏–º—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏, –∫–æ–≥–¥–∞ –æ–Ω –±—ã–ª –≤–∞–∂–Ω—ã–º —Ç–æ—Ä–≥–æ–≤—ã–º —Ü–µ–Ω—Ç—Ä–æ–º\n    –°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—å—è, –¥–æ —ç–ø–æ—Ö–∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–∞. –ö\n    —é–≥–æ-–∑–∞–ø–∞–¥—É –æ—Ç –°–µ–ª—å—á—É–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ –º–µ—Å—Ç–æ\n    –ø–∞–ª–æ–º–Ω–∏—á–µ—Å—Ç–≤–∞ - –î–æ–º –ë–æ–≥–æ—Ä–æ–¥–∏—Ü—ã, –≤ –∫–æ—Ç–æ—Ä–æ–º, –∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è,\n    –ø—Ä–æ–≤–µ–ª–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≥–æ–¥—ã –∂–∏–∑–Ω–∏ –î–µ–≤–∞ –ú–∞—Ä–∏—è. –ö–∞–∫ –ª—é–±–æ–π –∫—Ä—É–ø–Ω—ã–π\n    –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –≥–æ—Ä–æ–¥, –≠—Ñ–µ—Å –∏–º–µ–ª —Å–≤–æ–π –¢–µ–∞—Ç—Ä. –ò –∏–º–µ–Ω–Ω–æ –ø–æ\n    —Ä–∞–∑–º–µ—Ä–∞–º –¢–µ–∞—Ç—Ä–∞ - –∞ –æ–Ω –≤–º–µ—â–∞–µ—Ç –±–æ–ª–µ–µ 20000 —á–µ–ª–æ–≤–µ–∫!!! -\n    –∏—Å—Ç–æ—Ä–∏–∫–∏ —Å–º–æ–≥–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –≥–æ—Ä–æ–¥–∞! –ë–æ–ª—å—à–æ–π —Ç–µ–∞—Ç—Ä\n    –≤ –≠—Ñ–µ—Å–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Ö–æ–ª–º–µ, —É—Å—Ç–æ—è–ª –ø–æ—Å–ª–µ –º–Ω–æ–≥–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö\n    –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π, –æ–±–ª–∞–¥–∞–µ—Ç –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–µ–π –∞–∫—É—Å—Ç–∏–∫–æ–π, —á—Ç–æ\n    –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∑–¥–µ—Å—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∫–æ–Ω—Ü–µ—Ä—Ç—ã –∏\n    –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –Ω–∞—à–µ –≤—Ä–µ–º—è. –Ø –ø–æ—Å–µ—Ç–∏–ª–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n    —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ ¬´–û–≥–Ω–∏ –ê–Ω–∞—Ç–æ–ª–∏–∏¬ª –≤ –ê—Å–ø–µ–Ω–¥–æ—Å–µ\n    (–Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç –≥.–°–∏–¥–µ, –ê–Ω—Ç–∞–ª–∏–π—Å–∫–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ). –¢–µ–ø–µ—Ä—å –±—É–¥—É\n    —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∞—Ñ–∏—à–µ–π —Ç–µ–∞—Ç—Ä–∞ –≤ –≠—Ñ–µ—Å–µ* –û—Ç–¥—ã—Ö–∞—è –≤ –ë–æ–¥—Ä—É–º–µ,\n    –ò–∑–º–∏—Ä–µ –∏–ª–∏ –ö—É—à–∞–¥–∞—Å—ã, –º–æ–∂–Ω–æ –ø–æ—Å–µ—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ\n    –∑–¥–µ—Å—å –±—É–¥—É—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è. –°–µ–Ω—Ç—è–±—Ä—å –∏ –æ–∫—Ç—è–±—Ä—å- —Å–∞–º–æ–µ\n    –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å –æ—Ç–¥—ã—Ö –Ω–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ –∏\n    —ç–∫—Å–∫—É—Ä—Å–∏–∏. –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–π—Ç–µ! –ú–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω!","blogs.text.istanbul":"–î–æ—Ä–æ–≥–∏–µ –º–æ–∏! –ù–∏ –¥–ª—è –∫–æ–≥–æ –Ω–µ —Å–µ–∫—Ä–µ—Ç, —á—Ç–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ\n    –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Ä–∞–¥—É–µ—Ç, –¥–∞—Ä–∏—Ç –æ—â—É—â–µ–Ω–∏–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —Å–≤–æ–±–æ–¥—ã –∏\n    –∑–¥–æ—Ä–æ–≤–æ –±–æ–¥—Ä–∏—Ç —Å –¢–µ–º, –∫—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç —É –º–µ–Ω—è –∞–≤–∏–∞—Ç—É—Ä—ã –≤\n    –°—Ç–∞–º–±—É–ª, –¥–∞ –∏ –≤–æ–æ–±—â–µ —Ç—É—Ä—ã)), –≤—Å–µ–≥–¥–∞ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ\n    —Ç–æ–º, —á—Ç–æ –∑–Ω–∞—é –∏–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ\n    –æ–ø—ã—Ç–∞ –º–Ω–æ–≥–∏—Ö –ª–µ—Ç —Ä–∞–±–æ—Ç—ã . –ò –≤–æ—Ç –º–Ω–µ –ø—Ä–∏—à–ª–∞ –≤ –≥–æ–ª–æ–≤—É\n    –º—ã—Å–ª—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –æ–¥–Ω–æ–π –ª—é–±–æ–ø—ã—Ç–Ω–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—å—é\n    –¥. –†–µ—á—å –æ –ø—É–Ω–∫—Ç–µ –≤—ã—Ö–æ–¥–∞ –∫ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–º –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç—É –°—Ç–∞–º–±—É–ª–∞.\n     –ö–æ–Ω–µ—á–Ω–æ, —ç—Ç–æ ¬´–º–µ–ª–æ—á—å¬ª –°. –ú–Ω–æ–≥–∏–º –æ–Ω–∞ —É–∂–µ —Ö–æ—Ä–æ—à–æ\n    –∑–Ω–∞–∫–æ–º–∞... ‚Ä¢ –ù–æ –≤–¥—Ä—É–≥ –∫–æ–º—É-—Ç–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –∏ –æ–±–ª–µ–≥—á–∏—Ç –∂–∏–∑–Ω—å!\n    –ò—Ç–∞–∫. –ü–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ –ù–æ–≤—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç –°—Ç–∞–º–±—É–ª–∞ —Ä–µ–∞–ª—å–Ω–æ\n    –æ–≥—Ä–æ–º–Ω—ã–π. –û—Ç —Ç—Ä–∞–ø–∞ —Å–∞–º–æ–ª—ë—Ç–∞ –¥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –∏–¥—Ç–∏\n    –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–ª–≥–æ. –î–∞–∂–µ –Ω–µ —Å–∫–æ–ª—å–∫–æ –∏–¥—Ç–∏, —Å–∫–æ–ª—å–∫–æ –∏–¥—Ç–∏ +\n    –ø–æ—Å—Ç–æ—è—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—á–µ—Ä–µ–¥—è—Ö!!! –í –∑–∞–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑\n    –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –Ω–∞—à–∞ —Ü–µ–ª—å - –¥–≤–µ—Ä—å –Ω–æ–º–µ—Ä 13. –ó–¥–µ—Å—å –º–µ—Å—Ç–æ –ø–æ—Å–∞–¥–∫–∏\n    –Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä. ‚Ä¢ –ú—ã –∏–¥—ë–º –ø–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç—É. –ü—Ä–æ—Ö–æ–¥–∏–º –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–π\n    –∫–æ–Ω—Ç—Ä–æ–ª—å, –∑–∞–±–∏—Ä–∞–µ–º –±–∞–≥–∞–∂. –í–∏–¥–∏–º –±–æ–ª—å—à–æ–π –∑–∞–ª, –¥–≤–µ—Ä–∏, –Ω–∞–¥\n    –Ω–∏–º–∏ —Ü–∏—Ñ—Ä—ã- –Ω–æ–º–µ—Ä–∞ –≤—ã—Ö–æ–¥–æ–≤. –ù–∞–ø–æ–º–∏–Ω–∞—é. –ù–∞–º –Ω—É–∂–µ–Ω 13 –Ω–æ–º–µ—Ä.\n    –í–æ—Ç —Å–µ–π—á–∞—Å, –∫–æ–≥–¥–∞ –ø–∏—à—É —Ç–µ–∫—Å—Ç, —ç—Ç–æ —É–∂–µ –∫–∞–∂–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º –∏\n    –æ—á–µ–≤–∏–¥–Ω—ã–º. –î–∞–∂–µ —Å–º–µ—à–Ω—ã–º.–ê —Ç–æ–≥–¥–∞ –º—ã –ø—Ä–∏–ª–µ—Ç–µ–ª–∏ –Ω–æ—á—å—é.\n    –£—Å—Ç–∞–ª–∏. –î–∞ –∏ —Å–æ–Ω–Ω—ã–µ —É–∂–µ... –∏—Ç–∞–∫. –ï—Å—Ç—å –¶–∏—Ñ—Ä–∞ 12.... –ï—Å—Ç—å\n    —Ä–∞–¥–æ—Å—Ç–Ω–æ–µ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ!!! –°–µ–π—á–∞—Å –±—É–¥–µ—Ç –≤—ã—Ö–æ–¥‚Ä¶. –ø—Ä–æ—Ö–æ–¥–∏–º –µ—â—ë\n    –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç—Ä–æ–≤ –∏ ... –¶–∏—Ñ—Ä–∞ 14. –°—Ç–æ–ø ...–Ω–µ—É–∂–µ–ª–∏ –º—ã\n    –ù–ê–°–¢–û–õ–¨–ö–û —Å–æ–Ω–Ω—ã–µ? –ú–æ–∂–µ—Ç –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–µ? –ú–æ–∂–µ—Ç —Ü–∏—Ñ—Ä—ã\n    –¥—Ä—É–≥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞? –†–∞–∑–æ–±—Ä–∞–ª–∏—Å—å –Ω–µ —Å—Ä–∞–∑—É!!! –ò –ø–æ—Ç–æ–º –æ–± —ç—Ç–æ–º\n    –º–æ–º–µ–Ω—Ç–µ —è —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª–∞ —Ç—É—Ä–∏—Å—Ç–∞–º –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!!! –ù–∞–¥ –≤—ã—Ö–æ–¥–æ–º\n    13- —Ü–∏—Ñ—Ä–∞ —É–∫–∞–∑–∞–Ω–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —É–ª–∏—Ü—ã  - —Ç–æ –µ—Å—Ç—å –≤—ã—Ö–æ–¥\n    –µ—Å—Ç—å, –∞ –¶–∏—Ñ—Ä—ã –∏—Å–∫–æ–º–æ–π –Ω–µ –≤–∏–¥–Ω–æ. –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –∑–Ω–∞—Ç—å, –º–æ–∂–Ω–æ\n    –¥–æ–≥–∞–¥–∞—Ç—å—Å—è, –∫–æ–Ω–µ—á–Ω–æ. –ù–æ –∏ –ø–æ–Ω–µ—Ä–≤–Ω–∏—á–∞—Ç—å —Ç–æ–∂–µ –º–æ–∂–Ω–æ\n    –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥—ë–Ω - –∑–Ω–∞—á–∏—Ç –≤–æ–æ—Ä—É–∂—ë–Ω! –≠—Ç–æ—Ç –ø—É–Ω–∫—Ç –ø—Ä–æ–π–¥–µ–Ω! –î–∞–ª–µ–µ\n    –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π –≥–æ—Ä–æ–¥ –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–π—Ç–µ! –ú–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω!","blogs.text.musicians":"¬´–ü–∞–º—è—Ç–Ω–∏–∫ –ë—Ä–µ–º–µ–Ω—Å–∫–∏–º –º—É–∑—ã–∫–∞–Ω—Ç–∞–º¬ª- –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö\n    –ø–∞–º—è—Ç–Ω–∏–∫–æ–≤ –°—Ç–∞—Ä–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –†–∏–≥–∏.\n    –í—ã–ø–æ–ª–Ω–µ–Ω –æ–Ω –±—Ä–µ–º–µ–Ω—Å–∫–∏–º —Å–∫—É–ª—å–ø—Ç–æ—Ä–æ–º –ö—Ä–∏—Å—Ç–æ–π –ë–∞—É–º–≥–µ—Ä—Ç–µ–ª—å,\n    –ø—Ä–µ–ø–æ–¥–Ω–µ—Å—ë–Ω –†–∏–≥–µ –≤ –¥–∞—Ä –≥–æ—Ä–æ–¥–æ–º-–ø–æ–±—Ä–∞—Ç–∏–º–æ–º –ë—Ä–µ–º–µ–Ω–æ–º –∏\n    —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 1990 –≥–æ–¥—É. –ü–æ –ª–µ–≥–µ–Ω–¥–µ, –µ—Å–ª–∏ –ø–æ—Ç–µ—Ä–µ—Ç—å –Ω–æ—Å –æ—Å–ª–∞\n    –∏ –∑–∞–≥–∞–¥–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ, –æ–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–±—É–¥–µ—Ç—Å—è. –°–∞–º–æ–µ\n    —Å–æ–∫—Ä–æ–≤–µ–Ω–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ç—É—Ö, –¥–æ—Ç—è–Ω—É—Ç—å—Å—è –¥–æ\n    –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–∂–Ω–µ–µ –≤—Å–µ–≥–æ. –¢–æ –µ—Å—Ç—å,—É –º–µ–Ω—è –µ—Å—Ç—å –µ—â—ë –¥–≤–µ\n    –ø–æ–ø—ã—Ç–∫–∏. –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–π—Ç–µ! –ú–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω!","blogs.text.city":"–ö–∞–∫ –≤–ª—é–±–∏—Ç—å—Å—è –≤ –°—Ç–∞–º–±—É–ª –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è  –¥–ª—è —Ç–µ—Ö,\n    –∫—Ç–æ, –∫–∞–∫ –∏ —è, –ª–µ—Ç–∏—Ç –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑: –ù–∞ –ø–æ—Å–µ–ª–∏—Ç—å—Å—è –≤\n    –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ –≥–æ—Ä–æ–¥–∞ - –°—É–ª—Ç–∞–Ω–∞—Ö–º–µ—Ç; –ø–æ—Å–µ—Ç–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ\n    –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ - –¢–æ–ø–∫–∞–ø—ã –ü–∞–ª–∞—Å,\n    –ê–π—è-–°–æ—Ñ–∏—è. –ì–æ–ª—É–±–∞—è –ú–µ—á–µ—Ç—å –µ—â—ë –Ω–∞ —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏–∏, –¶–∏—Å—Ç–µ—Ä–Ω–∞\n    –ë–∞–∑–∏–ª–∏–∫–∞ —Ç–æ–∂–µ –∑–∞–∫—Ä—ã—Ç–∞. . –ì–∏–¥ –Ω–∞–º –ø–æ–∫–∞–∑–∞–ª –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ\n    –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–µ . –°–º–æ—Ç—Ä–µ–ª–∞ –≤–∏–¥–µ–æ–æ–±–∑–æ—Ä—ã –±–ª–æ–≥–≥–µ—Ä–æ–≤ –æ –Ω–µ–º –∏\n    –≤—Å—ë —Ä–∞–≤–Ω–æ –∏ –Ω–µ —Ñ–∞–∫—Ç, —á—Ç–æ –Ω–∞—à–ª–∞ –±—ã. –í—Ö–æ–¥ –≤ –Ω–µ–≥–æ —á–µ—Ä–µ–∑\n    –º–∞–≥–∞–∑–∏–Ω –∫–æ–≤—Ä–æ–≤  ; \n    .–ø–æ–≥—É–ª—è—Ç—å –≤ –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø–∞—Ä–∫–∞—Ö –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å 1 —Ç—é–ª—å–ø–∞–Ω—ã\n    ‚ÇΩ . –ú—ã –±—ã–ª–∏ —Ç–æ–ª—å–∫–æ –≤ –ø–∞—Ä–∫–µ –ì—é–ª—å—Ö–∞–Ω–µ. –û–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤\n    –°—É–ª—Ç–∞–Ω–∞—Ö–º–µ—Ç–µ. –ù–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ  —Å–æ–≤–µ—Ç—É—é –ø–æ—Å–µ—Ç–∏—Ç—å –î–æ–ª–º–∞–±–∞—Ö—á–µ\n    - –¥–≤–æ—Ä–µ—Ü –æ—Å–º–∞–Ω—Å–∫–∏—Ö —Å—É–ª—Ç–∞–Ω–æ–≤ –Ω–∞ –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ\n    –ë–æ—Å—Ñ–æ—Ä–∞. –¥–µ–≤—É—à–∫–∏ –ø—Ä–∏–µ–∑–∂–∞—é—Ç —Ç—É–¥–∞ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–º (–Ω–∞–±–æ—Ä–æ–º\n    –ø–ª–∞—Ç—å–µ–≤ ) –∏ –¥–µ–ª–∞—é—Ç –∫–ª–∞—Å—Å–Ω—ã–µ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏ ¬ßs_ –í—Ö–æ–¥–Ω—ã–µ –±–∏–ª–µ—Ç—ã:\n    –ø–æ –û—Å–Ω–æ–≤–Ω–æ–º—É –∑–¥–∞–Ω–∏—é 90 –ª–∏—Ä, –¢–æ–ª—å–∫–æ –ì–∞—Ä–µ–º 60 –ª–∏—Ä, –∞\n    –û—Å–Ω–æ–≤–Ω–æ–µ –∑–¥–∞–Ω–∏–µ +–ì–∞—Ä–µ–º - 120 –ª–∏—Ä . –û–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –≤—Ö–æ–¥–Ω–æ–π\n    –±–∏–ª–µ—Ç ( –∏ –∞—É–¥–∏–æ–≥–∏–¥ –±–µ—Ä—ë—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ ( ! –≤ –∑–∞–ª–æ–≥ –ø–æ—Ç—Ä–µ–±—É—é—Ç\n    –ø–∞—Å–ø–æ—Ä—Ç –∏–ª–∏ –ø—Ä–∞–≤–∞, –Ω–æ –º—ã –≤–∏–¥–µ–ª–∏ –∏ –ø—Ä–æ—Å—Ç–æ –¥–µ–Ω–µ–∂–Ω—ã–π\n    —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç  –æ—á–µ–Ω—å ! —Å–æ–≤–µ—Ç—É—é –ø—Ä–æ–∫–∞—Ç–∏—Ç—å—Å—è –ø–æ –ë–æ—Å—Ñ–æ—Ä—É (–µ—Å—Ç—å\n    –≤–µ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏ —Å —É–∂–∏–Ω–æ–º, –º—ã –≤—ã–±—Ä–∞–ª–∏ –¥–Ω–µ–≤–Ω–æ–µ –≤—Ä–µ–º—è) –∞\n    –∏... 1100 ! ! –∫–æ–Ω–µ—á–Ω–æ –∂–µ, –∫—é—é—é—é—à–∞—Ç—å –ü—Ä–∏—á–µ–º, –º—ã –µ–ª–∏ –∏ –≤\n    —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö —Å –æ—á–µ–Ω—å –ø—Ä–∏–ª–∏—á–Ω—ã–º —á–µ–∫–æ–º ) , –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏\n    –º–µ—Å—Ç–Ω—É—é —É–ª–∏—á–Ω—É—é –µ–¥—É (–±–∞–ª—ã–∫ —ç–∫–º–µ–∫- —Å–∫—É–º–±—Ä–∏—è —Å —Ä–µ–∑–∞–Ω—ã–º\n    —Å–∞–ª–∞—Ç–æ–º –∏ –ª—É–∫–æ–º –≤ –±—É–ª–∫–µ –∑–∞ 20 –ª–∏—Ä) - –≤—Å—ë –í–ö–£–°–ù–û –∏\n    –µ—â—ë –¥–∏–∫–∏–π, –Ω–µ–æ–±—É–∑–¥–∞–Ω–Ω—ã–π —à–æ–ø–∏–Ω–≥ . –ê –µ—Å–ª–∏ —Å–µ—Ä—å–µ–∑–Ω–æ, —á–µ–º –±—ã\n    –≤—ã –Ω–∏ –∑–∞–Ω—è–ª–∏ —Å–≤–æ—ë –≤—Ä–µ–º—è –≤ —ç—Ç–æ–º –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–º –≥–æ—Ä–æ–¥–µ, –≤—ã\n    –≤–µ—Ä–Ω—ë—Ç–µ—Å—å –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–∑–∏—Ç–∏–≤–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–π—Ç–µ! –ú–∏—Ä \n    –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω!"},en:{"hero.list.item.aboutme":"About me","hero.list.item.aboutpay":"How to pay","hero.list.item.reviews":"Reviews","hero.list.item.blogs":"Blog","hero.list.item.contact":"Contacts","hero.txt":"Your travel agent","hero.title":"Tatiana Lomakina","hero.description":"I find the shortest way from the question ¬´where to rest¬ª  to the answer!","hero.link.btn":"Selection and support of your trip!","about.aboutme":"About me","about.list.item.aboutme":"Greetings, dear site visitor! My name is Tatyana Lomakina. I have been engaged in tourism since 2000. That is, my work experience is more than 20 years.","about.list.item.agency":"Since March 2013, I have been working as a private entrepreneur - Igtours Agency (Individual & Group tours).","about.list.item.description":"During this time, she managed to visit 37 countries and some more than once. I love my work and people, I am constantly working on myself and improving my knowledge.","about.list.item.partnership":"We will maintain friendly relations with many customers and we already have a community! üôÇ","about.list.item.mission":"My main mission is to find a shorter way from the question - where to rest - to the answer! To the answer that will satisfy the customer and make both parties happy üôÇ!","about.list.item.wishes":"Each new journey makes us a little different. So let us change only for the better!","payment.title.pay":"How to pay","payment.list.item.pay":"After we have found the best vacation option, the question of paying for it arises.","payment.list.item.aboutpay":"Payment for the tour is accepted exclusively in the national currency (hryvnia). For bank cards denominated in other currencies, the conversion rate is determined by the payment system and your bank.","payment.list.item.qr":"Do you use the QR code?\n    (via Privat24)","payment.list.item.transfer":"Details of the IGTours company","payment.list.item.transfer.provider":"Supplier: FOP Lomakina Tetyana Volodymyrivna","payment.list.item.transfer.check":"–†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏–π —Ä–∞—Ö—É–Ω–æ–∫: UA613052990000026009050251687","payment.list.item.transfer.bank":"Bank: PrivatBank, MFO: 305299","payment.list.item.transfer.number":"Individual tax number (TIN): 2646412208","payment.list.item.transfer.phone":"Contact phone number:","reviews.title":"Reviews","blogs.title":"Blog","footer.contact":"Contacts:","swiper.description":"I really liked the service and the provided tour! Thank you HUGE! I advise everyone!","swiper.time":"August 2017","blogs.text.spices":'I stopped making souvenirs and small gifts a long time ago\n    brings to his numerous relatives and friends\n    magnets Instead of souvenir magnets from different countries, I\n    she started bringing spices. It is not news that it is spices\n    they "do" the kitchen! Products for cooking different dishes\n    countries are approximately the same, but with different spices\n    the same dish "sounds" differently! That\'s to make it easy\n    and it is nice to give an opportunity to dear people\n    to taste a new country, I derived the formula\n    an ideal souvenir. You can say that now\n    There is a huge selection of spices on the shelves of our local stores\n    it makes sense to take them from abroad - I agree, but only\n    partly And it\'s all about pleasant little things, iz\n    which, in fact, our life consists of))) Itak: \n    where are we taking it from? From Hungary, of course, paprika. From Greece\n    Cyprus, Italy - a mass of ready-made herbs in\n    different-caliber packages (choose according to the principle\n    price-quality, goodness, the selection is huge and everything is delicious!)\n    The main additive to Bulgarian salads is layered salt\n    (variegated salt is a mixture of fine salt and spices, which clearly\n    you can feel red ground pepper and thyme). Taste on\n    amateur, of course, but I liked it. From Thailand\n    I brought dry lemongrass - we add it to tomato soup\n    - mmmm - union! I remind you, for an amateur)) It is possible\n    remember the names before the trip or buy spices\n    in place and already complete - it\'s your choice, but a gift\n    comes out glorious.',"blogs.text.history":'I have always loved history...History as a subject that\n    they also teach stories, as well as stories that attract people\n    carried into the past. But there is a story in which it is possible\n    plunge into reality, feel its energy! Honor\n    and praise to archaeologists! Excavations began in 1869 and\n    still going on! c Ephesus - ancient city in Turkish\n    In the Aegean region near the modern city of Selchuk.\n    Ruins discovered during archaeological excavations\n    allow us to trace its history since the times of Ancient Greece\n    and the Roman Empire, when it was an important trade center\n    Mediterranean, before the era of the spread of Christianity. K\n    There is a popular place southwest of Selcuk\n    pilgrimage - the House of the Virgin, in which, as it is believed,\n    Virgin Mary spent the last years of her life. Like any big one\n    A cultural city, Ephesus had its own theater. And precisely by\n    the size of the Theater - and it can accommodate more than 20,000 people!!! -\n    historians were able to present the dimensions of the city! Bolshoi Theater\n    in Ephesus, built on a hill, it stood after many\n    earthquake, has very good acoustics, —á—Ç–æ\n    allows various concerts to be held here, etc\n    events in our time. I visited the performance\n    dance group "Lights of Anatolia" in Aspendos\n    (not far from Side, Antalya coast). I will now\n    follows the posters of the theater in Ephesus Rest in Bodrum,\n    Izmir or Kusadasi, you can visit events that\n    will be held here. September and October are the same\n    comfortable time to combine rest on the coast and\n    excursions Travel! The world is beautiful!',"blogs.text.istanbul":"My dear! It is no secret to anyone that it is independent\n    travel makes you happy, gives you a feeling of incredible freedom, etc\n    It's great to cheer up those who order air tours from me\n    Istanbul, and even tours in general)), I always tell about it in detail\n    what I know from my own and professional experience\n    experience of many years of work. And now it occurred to me\n    thought to share one curious little detail\n    d. We are talking about the exit point for transfers at Istanbul airport.\n     Of course, this is a \"trifle\" of S. It is already good for many\n    an acquaintance... But suddenly someone will find it useful and make life easier!\n    So. More details The new airport of Istanbul is real\n    huge Go from the plane ramp to the airport exit\n    long enough Not even how much to go, how much to go +\n    stand in several queues!!! In the exit hall\n    At the airport, our goal is door number 13. This is the boarding place\n    for transfer. ‚Ä¢ We are walking through the airport. We pass the passport office\n    control, we take the luggage. We can see a large hall, doors, above\n    they are exit numbers. I remind We need number 13.\n    Now, when I write the text, it already seems simple\n    obvious Even funny. And then we arrived at night.\n    Tired Yes, and sleepy already... so. Yes Digit 12.... Yes\n    joyful excitement!!! Now there will be a way out... we pass more\n    a few meters and ... Number 14. Stop) are we really?\n    SO sleepy? Maybe inattentive? Maybe numbers\n    second size? We didn't figure it out right away!!! And then about that\n    moment I told the tourists MUST!!! Above the exit\n    13 - the number is indicated from the side of the street e) - that is, the exit\n    yes, but the numbers you are looking for are not visible. If you don't know this, you can\n    will guess, of course. But it is also possible to get nervous\n    Warned means armed! This point is passed! Next\n    magnificent city Travel! The world is beautiful!","blogs.text.musicians":'"Monument to Bremen Musicians" is one of the most popular\n    monuments of the Old Town of Riga. Must do photo place.\n    It was made by the Bremen sculptor Christoy Baumgertel,\n    presented to Riga as a gift by the sister city of Bremen and\n    established in 1990. According to legend, if you rub the donkey\'s nose\n    and make a wish, it will surely come true. Same thing\n    a cock fulfills a secret desire, reach for\n    which is the most difficult. That is, I have two more\n    demand Travel! The world is beautiful!',"blogs.text.city":"How to fall in love with Istanbul Step-by-step instructions  for those\n    who, like me, is flying for the first time: Na will settle in\n    the historical part of the city - Sultanahmet; visit open\n    at the moment the attractions are Topkapi Palace,\n    Hagia Sophia. The Blue Mosque is still under restoration, the Cistern\n    The basilica is also closed. . The guide showed us an alternative\n    reservoir . I watched video reviews of bloggers about him\n    all the same, it is not a fact that she would have found it. Entrance to it through\n    carpet shop  ; watch my amateur video\n    .walk in city parks and photograph 1 tulips\n    . We were only in Gulhane Park. He is located in\n    Sultanahmet For sure! I advise you to visit Dolmabah√ße\n    - the palace of the Ottoman sultans on the European side\n    Bosphorus. girls come there with props (set\n    dresses) and make cool photo sessions Entrance tickets:\n    for the main building 90 lira, only Harem 60 lira, a\n    Main building + Harem - 120 lira . You pay the entrance fee\n    you get the ticket (and the audio guide for free (! a deposit is required\n    passport or license, but we saw it and just [s] money\n    equivalent ! I advise you to take a ride along the Bosphorus (ie\n    evening walks with dinner, we chose daytime) a\n    and... 1100! ! of course, they eat. Moreover, we also ate in\n    restaurants with a very decent check) and tested\n    local street food (balyk ekmek - mackerel with cut\n    salad and onion in a bun for 20 lira) - everything is TASTY ! and and\n    even more wild, unbridled shopping Sh And if seriously, what would it be\n    You took your time in this beautiful city, you\n    come back filled with positivity Travel! Peace \n    beautiful!"}},n=[{title:"August 2017",name:"Alla Kravchenko",description:"Tanya, we returned from Turkey, there is a crisis in Delphin Deluxe Resort\n    did not touch us (there are just fewer tourists in the hotel), everything was like\n    always, not top notch, food top notch - out of 10\n    days only 1 day there was no red fish!! Everything is cool! Thanks!!"},{title:"October 17, 2017",name:"Yana Chaika",description:"2 days ago returned with friends from\n    Egypt. Rest were satisfied. Behind\n    The choice turned to Tanya and did not\n    miscalculated. Chose Sharm El Sheikh\n    first line of the sea hotel Hilton Sharm\n    Sharks Bay 4 * ( in no way inferior to 5 * )\n    the territory of the hotel is green and well-groomed,\n    spacious. There are many pools\n    even a slide, but that's what we went for\n    Red sea. Very beautiful\n    coral reef and many\n    colorful fish. Animation\n    great program guys\n    well done animators! - sit still\n    do not give. In spite of\n    internationality of the hotel, relax\n    it was fun and not stressful. In the hotel\n    traveled to countries such as Italy,\n    Spain, Germany, Ukraine, Egypt,\n    Kuwait, Belarus. ....the rest are not\n    remembered. Didn't want to leave.\n    Plan your next vacation\n    we will only be with IG tours."},{title:"December 13, 2017",name:"Yakov Shoshyn",description:"In life, in order to become more successful, you need to know the whole world !!!"},{title:"November 8, 2017",name:"Lilia Dmitrienko",description:"Already four times our holiday was a success and\n    all with the help of IGtours and Tatyana personally!\n    We returned from Egypt in October.\n    Satisfied with the hotel\n    location and level of service.\n    Tatyana, thank you for the excellent\n    recommendations.\n    Next time only to you!)"},{title:"June 2018",name:"Aa Gm",description:"If you want to relax and not think about\n    boarding passes, check-in\n    flight, transfer, etc., then Tanya is for you\n    :) Thanks"},{title:"July 2018",name:"Valeria Titenko",description:"In the summer of 2015, the family vacationed in\n    Greece on the peninsula of Sithonia (tour\n    organized IG tours) Rested in\n    hotel Athena Pallas Village 5 *.\n    Great hotel with great\n    territory and three huge\n    pools. This is a heavenly place\n    amazing sea, pines and\n    olive groves. Meals at the hotel\n    top notch, eat like a swedish\n    table and a la carte restaurant. And of course\n    the peninsula of Sithonia itself, with\n    crazy beautiful views\n    beaches and nature. I advise you to take\n    rent a car and drive around\n    peninsula."},{title:"October 6, 2019",name:"Vladislav Ryl",description:"Dreams Come True! Thank you so much\n    for a trip to Manchester: help with\n    visa, excellent choice of hotel and\n    comfortable flight!"},{title:"June 5, 2020",name:"Victoria Poklonskaya",description:'\n    Holidays in Pattaya, January 2020 Tanyusha huge respect for this hotel!!!! We are very picky travelers. But she could more than please! I am writing after almost 5 months (I gave myself time to cool down from all emotions and our pandemic) D\n    Varee Jomtien Beach 4 * is a fairy tale!!!\n    The service is beyond praise, the hotel really pulls on 5 *. After reading the hotel reviews, I was expecting a typical Asian hotel (with all\n    "gags"), but having settled in the room was pleasantly surprised. The breakfasts are just amazing. The staff is unobtrusively helpful and friendly, the fitness room is simple, but has everything you need. But, we did not go for the sake of the hotel, but the opportunity to visit the elephant farm, the crocodile farm, the famous NonGnuch Park, the Alcazar show (the child was a little shocked). All in all, a great vacation!!!\n    Thank you Tanya!!!'},{title:"February 5, 2020",name:"Vladislav Panasenko",description:"Rested on a combo tour\n    Bulgaria + Greece. In Bulgaria, we were in the ski resort of Bansko, in a hotel\n    Sport Hotel 9 nights. In Greece in\n    Thessaloniki was only 1 day and that was enough).\n    In general, we are very satisfied with the trip.\n    Thank you very much, we will contact\n    You are still vegetative."},{title:"July 12, 2020",name:"Elena Kunak",description:"Since September 2019, my husband and I finally flew to Italy for a week K ¬©!\n    We flew to Rimini, lived there all the time, ate, drank, walked, and swam!\n    We went on excursions to Rome, Venice, San Marino and Florence.\n    Everything was great\n    ‚Ä¢ but 3 hours before the transfer to the airport, a bag with passports was taken from under our noses!!!\n    Horror and nightmare!!! I will not retell the details of the adventure, I will only say that our vacation lasted for 4 days!))\n    and now I know how to get to the embassy, what Rome looks like in the evening and at night () we already have new passports and we are ready for new Adventures"},{title:"February 21, 2020",name:"Tatyana Vasilyeva",description:"Came back a week ago from a vacation.\n    Zanzibar. Everyone liked it very much!\n    Clean and new hotel, beautiful, turquoise sea, water temperature +29, colorful people, fresh and deliciously cooked seafood everywhere.\n    All our trips are booked through\n    IGtours!\n    Tanya thank you very much! You know how to turn dreams into reality!"},{title:"July 24, 2020",name:"Ruslana Rudenko",description:"Yesterday the family flew back from vacation.\n    The hotel we chose exceeded all expectations! Gorgeous park area, turquoise sea, fresh breeze - it's all a guarantee of good emotions! Service at the hotel at a high level: cleaning of rooms, territory.\n    We have been taking vacations through IGtours for the 4th year already - always at the highest level!!! Thank you)"},{title:"September 18, 2020",name:"Alla Gabueva",description:"I wanted a quiet and budget holiday.\n    Hotel Kriss lived up to all expectations.\n    Cozy and family friendly. Well-groomed territory with many plants, affectionate cats.) Clean pool without much chlorine smell. No frills, good and varied food.\n    Clean rooms. Professional and friendly staff. Cozy at home. Refused to take remuneration upon check-in.\n    The only downside is that it doesn't have its own beach. Went to the free municipal. Nothing.\n    But what views along the way: exotic flowers, white houses, embankment. And the sea smells like watermelon.\n    But all good things come to an end quickly: I managed to visit only one excursion: to Pa-Mukkale, which left many pleasant impressions .. and photos.)\n    I recommend to those who are not blue blooded.) I promise to return.)\n    Many thanks to the organizers - true professionals"},{title:"August 09, 2020",name:"Anatoly Grishchenko",description:"We are very grateful to IG tours for the clear organization of their work and the high level of professionalism.\n    My family and our friends have been working closely with them for more than ten years and very successfully.\n    Even in an extremely difficult year for tourism in 2020, Tatyana Vladimirovna promised and perfectly organized a family vacation for us in December in Egypt with her granddaughter.\n    She even managed to refund us the cost of taking PCR tests.\n    It was very pleasant and unexpected.\n    She knows what to offer to whom from her capabilities so that customers are satisfied.\n    And the possibilities are not great. For every taste desire and wallet.\n    Who wants to fulfill their plans for interesting tours with rest and impressions - we recommend contacting this company IGtours and you will have a successful vacation and everything will be OK !!!\n    THANKS, TANECHKA."},{title:"October 16, 2021",name:"Natalia Mishchenko",description:"Just got back from Egypt.\n    Rested in the hotel \"Albatros Vista\n    Resort\"5*\n    My rating for the hotel is 4.5, everything is fine, only there are no fish.\n    The food was delicious, the territory is beautiful, especially in the evening, the music is live and singing, the staff is cultural and fast, everything is clean, the beach is gorgeous, not every hotel in Turkey is so big. Fish and the depth of the sea - that's what was missing.\n    It's good with little kids. \n    And a little more trees will grow up, you can see they just planted."},{title:"November 15, 2021",name:"Vera Katlan",description:"My first vacation was in October!\n    With the help of a wonderful professional Tatyana Lomakin.\n    Chose Latte Beach Hotel\n    (Kemer, Turkey).\n    Thanks to a well-organized life? helpful staff and beautiful weather 7 days and 7 nights flew by quickly and with impressions (excursions Tahtaly, Pammukale, Demre contributed).\n    I took note: in good accompaniment, you can have a great rest at any time of the year!"},{title:"July 10, 2020",name:"Andrey Stelmakh",description:"Sri Lanka.Amagi Beach Hotel\n    Came to this hotel due to quarantine\n    China. I had to urgently change direction, and, in general, they did not regret it.\n    They compared what they had read about Hainan and the rest in Marawil, once again they were convinced that there would be no happiness, but misfortune would help.\n    But the taste and color...\n    The hotel is like a hotel, budget, on the ocean, price-quality match.\n    The room has everything you need, the Internet is closer to the reception, any request is fulfilled as best they can.\n    Refrigerators are in short supply, but they promised, and they brought them a day later. On the day of departure, they asked for scales, to weigh luggage, they brought, however, they did not work.\n    But they brought it!\n    There is not much entertainment in Marawil.\n    Quiet and peaceful village.\n    Locals complain about the lack of tourists.\n    The owner of the hotel approached our neighbor, asked not to go to other cafes, take excursions only at the hotel.\n    She, of course, did the opposite.\n    BUT this is so-so, the impression from the hotel and the staff did not spoil.\n    We were a little surprised to see a lot of young people from twenty-five and older in the hotel and in Marawil itself.\n    They did not look sad and boring, rather, on the contrary.\n    Our neighbors are a young couple from\n    Peter, they said that they were just happy, after the bustle of the city, the hassle and dampness, to rest for ten days in peace and quiet.\n    The most important thing is the OCEAN and the coastal endless strip of sand under the palm trees.\n    The hotel has its own beach, you can swim, rinse in the shower by the pool and sit on the terrace near your room or at the tables under the palm trees on the grass.\n    There is a pool, but, in my opinion, the pool on the ocean is field hockey and ballet on ice (F. Ranevskaya).\n    It is difficult to call the beach to the right of the hotel, no umbrellas, sunbeds, merchants of all sorts of nonsense.\n    Only occasionally do fishermen either mend their nets or sort out their catch.\n    Locals clean their yards, do some housework, their yards come almost to the ocean.\n    Where we often swam, the owner regularly dragged his dog for a swim, for order it rested a little.\n    On Road Beach, where the hotel is located, there is a cafe, a few shops (WATER, FRUIT).\n    Once a week, a seafood market will be prepared both at the hotel and in any cafe.\n    In the center, where the shops are an exchanger and a stop between. city buses, you can take tuk tuks that stand under the hotel, you can, wrote, on foot.\n    BUT thirty, forty minutes in the heat is still a pleasure.\n    The concept of a good holiday is different for everyone.\n    But I do not regret that I had to change the concrete skyscrapers of Dadonghai for the village silence and tranquility of Maravila"}],s=[{title:"–ê–≤–≥—É—Å—Ç 2017",name:"–ê–ª–ª–∞ –ö—Ä–∞–≤—á–µ–Ω–∫–æ",description:" –¢–∞–Ω—è, –º—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å —Å –¢—É—Ä—Ü–∏–∏, –≤ Delphin Deluxe Resort –∫—Ä–∏–∑–∏—Å\n      –Ω–∞—Å –Ω–µ –∫–æ—Å–Ω—É–ª—Å—è (–ø—Ä–æ—Å—Ç–æ –≤ –æ—Ç–µ–ª–µ –º–µ–Ω—å—à–µ —Ç—É—Ä–∏—Å—Ç–æ–≤), –≤—Å–µ –±—ã–ª–æ –∫–∞–∫\n      –≤—Å–µ–≥–¥–∞, –Ω–µ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ, –ø–∏—Ç–∞–Ω–∏–µ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ - –∏–∑ 10\n      –¥–Ω–µ–π —Ç–æ–ª—å–∫–æ 1 –¥–µ–Ω—å –Ω–µ –±—ã–ª–æ –∫—Ä–∞—Å–Ω–æ–π —Ä—ã–±—ã!! –í—Å—ë —Å—É–ø–µ—Ä, –°–ø–∞—Å–∏–±–æ!!"},{title:"17 –æ–∫—Ç—è–±—Ä—è 2017",name:"–Ø–Ω–∞ –ß–∞–π–∫–∞",description:"2 –¥–Ω—è –Ω–∞–∑–∞–¥ –≤–µ—Ä–Ω—É–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –∏–∑\n      –ï–≥–∏–ø—Ç–∞. –û—Ç–¥—ã—Ö–æ–º –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã. –ó–∞\n      –í—ã–±–æ—Ä–æ–º –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –¢–∞–Ω–µ –∏ –Ω–µ\n      –ø—Ä–æ–≥–∞–¥–∞–ª–∏. –í—ã–±—Ä–∞–ª–∏ –®–∞—Ä–º –≠–ª—å –®–µ–π—Ö\n      –ø–µ—Ä–≤–∞—è –ª–∏–Ω–∏—è –º–æ—Ä—è –æ—Ç–µ–ª—å Hilton Sharm\n      Sharks Bay 4 * ( –Ω–∏—á–µ–º –Ω–µ —É—Å—Ç—É–ø–∞–µ—Ç 5 * )\n      —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –æ—Ç–µ–ª—è –∑–µ–ª—ë–Ω–∞—è —É—Ö–æ–∂–µ–Ω–Ω–∞—è,\n      –ø—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è. –ú–Ω–æ–≥–æ –±–∞—Å—Å–µ–π–Ω–æ–≤, –µ—Å—Ç—å\n      –¥–∞–∂–µ –≥–æ—Ä–∫–∞, –Ω–æ —Ç–æ —Ä–∞–¥–∏ —á–µ–≥–æ –µ—Ö–∞–ª–∏ —ç—Ç–æ\n      –∫—Ä–∞—Å–Ω–æ–µ –º–æ—Ä–µ. –û—á–µ–Ω—å –∫—Ä–∞—Å–∏–≤—ã–π\n      –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π —Ä–∏—Ñ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ\n      –∫—Ä–∞—Å–æ—á–Ω—ã—Ö —Ä—ã–±–æ–∫. –ê–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω–∞—è\n      –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ç–ª–∏—á–Ω–∞—è -—Ä–µ–±—è—Ç–∞\n      –∞–Ω–∏–º–∞—Ç–æ—Ä—ã –º–æ–ª–æ–¥—Ü—ã! - –Ω–∞ –º–µ—Å—Ç–µ —Å–∏–¥–µ—Ç—å\n      –Ω–µ –¥–∞—é—Ç. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞\n      –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–µ–ª—è, –æ—Ç–¥—ã—Ö–∞—Ç—å\n      –±—ã–ª–æ –≤–µ—Å–µ–ª–æ –∏ –Ω–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ. –í –æ—Ç–µ–ª–µ\n      –æ—Ç–¥—ã—Ö–∞–ª–∏ —Ç–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã –∫–∞–∫ –ò—Ç–∞–ª–∏—è,\n      –ò—Å–ø–∞–Ω–∏—è, –ì–µ—Ä–º–∞–Ω–∏—è, –£–∫—Ä–∞–∏–Ω–∞, –ï–≥–∏–ø—Ç,\n      –ö—É–≤–µ–π—Ç, –ë–µ–ª–∞—Ä—É—Å—å. ‚Ä¶.–æ—Å—Ç–∞–ª—å–Ω—ã—Ö –Ω–µ\n      –∑–∞–ø–æ–º–Ω–∏–ª–∞. –£–µ–∑–∂–∞—Ç—å –Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å.\n      –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–∏–π –æ—Ç–ø—É—Å–∫\n      –±—É–¥–µ–º —Ç–æ–ª—å–∫–æ —Å IG tours."},{title:"13 –¥–µ–∫–∞–±—Ä—è 2017",name:"Yakov Shoshyn",description:"–í –∂–∏–∑–Ω–∏, —á—Ç–æ–± —É—Å–ø–µ—à–Ω–µ–π —Å—Ç–∞—Ç—å –Ω—É–∂–Ω–æ —Ü–µ–ª—ã–π –º–∏—Ä –ø–æ–∑–Ω–∞—Ç—å !!!"},{title:"8 –Ω–æ—è–±—Ä—è 2017",name:"–õ–∏–ª–∏—è –î–º–∏—Ç—Ä–∏–µ–Ω–∫–æ",description:"–£–∂–µ —á–µ—Ç—ã—Ä–µ —Ä–∞–∑–∞ –Ω–∞—à –æ—Ç–¥—ã—Ö —É–¥–∞–ª—Å—è –∏\n      –≤—Å–µ —Å –ø–æ–º–æ—â—å—é IGtours –∏ –ª–∏—á–Ω–æ –¢–∞—Ç—å—è–Ω—ã!\n      –í –æ–∫—Ç—è–±—Ä–µ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ –ï–≥–∏–ø—Ç–∞.\n      –û—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã –æ—Ç–µ–ª–µ–º, –µ–≥–æ\n      —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –∏ —É—Ä–æ–≤–Ω–µ–º —Å–µ—Ä–≤–∏—Å–∞.\n      –¢–∞—Ç—å—è–Ω–∞, —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–µ\n      —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n      –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –∫ –í–∞–º!)"},{title:"–ò—é–Ω—å 2018",name:"Aa Gm",description:"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Ç–¥—ã—Ö–∞—Ç—å, –∞ –Ω–µ –¥—É–º–∞—Ç—å –æ\n    –ø–æ—Å–∞–¥–æ—á–Ω—ã—Ö —Ç–∞–ª–æ–Ω–∞—Ö, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞\n    —Ä–µ–π—Å, —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–µ –∏ —Ç.–¥., –¢–æ–≥–¥–∞ —Ç–µ–±–µ –∫ –¢–∞–Ω–µ\n    :) –°–ø–∞—Å–∏–±–æ"},{title:"–ò—é–ª—å 2018",name:"–í–∞–ª–µ—Ä–∏—è –¢–∏—Ç–µ–Ω–∫–æ",description:"–õ–µ—Ç–æ–º 2015 –≥–æ–¥–∞ —Å–µ–º—å–µ–π –æ—Ç–¥—ã—Ö–∞–ª–∏ –≤\n    –ì—Ä–µ—Ü–∏–∏ –Ω–∞ –ø–æ–ª—É–æ—Å—Ç—Ä–æ–≤–µ –°–∏—Ç–æ–Ω–∏—è (—Ç—É—Ä\n    –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞–ª–∞ IG tours) –û—Ç–¥—ã—Ö–∞–ª–∏ –≤\n    –æ—Ç–µ–ª–µ Athena Pallas Village 5*.\n    –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –æ—Ç–µ–ª—å —Å –±–æ–ª—å—à–æ–π\n    —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–µ–π –∏ —Ç—Ä–µ–º—è –æ–≥—Ä–æ–º–Ω—ã–º–∏\n    –±–∞—Å—Å–µ–π–Ω–∞–º–∏. –≠—Ç–æ —Ä–∞–π—Å–∫–æ–µ –º–µ—Å—Ç–µ—á–∫–æ —Å\n    –∏–∑—É–º–∏—Ç–µ–ª—å–Ω—ã–º –º–æ—Ä–µ–º, —Å–æ—Å–Ω–∞–º–∏ –∏\n    –æ–ª–∏–≤–∫–æ–≤—ã–º–∏ —Ä–æ—â–∞–º–∏. –ü–∏—Ç–∞–Ω–∏–µ –≤ –æ—Ç–µ–ª–µ\n    –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ, –µ—Å—Ç—å –∫–∞–∫ —à–≤–µ–¥—Å–∫–∏–π\n    —Å—Ç–æ–ª –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –ê–ª—è-–∫–∞—Ä—Ç. –ù—É –∏ –∫–æ–Ω–µ—á–Ω–æ\n    –∂–µ —Å–∞–º –ø–æ–ª—É–æ—Å—Ç—Ä–æ–≤ –°–∏—Ç–æ–Ω–∏—è, —Å\n    —Å—É–º–∞—à–µ–¥—à–µ-–∫—Ä–∞—Å–∏–≤—ã–º–∏ –≤–∏–¥–∞–º–∏,\n    –ø–ª—è–∂–∞–º–∏ –∏ –ø—Ä–∏—Ä–æ–¥–æ–π. –°–æ–≤–µ—Ç—É—é –±—Ä–∞—Ç—å\n    –º–∞—à–∏–Ω—É –≤ –∞—Ä–µ–Ω–¥—É –∏ –ø—Ä–æ–µ—Ö–∞—Ç—å—Å—è –ø–æ\n    –ø–æ–ª—É–æ—Å—Ç—Ä–æ–≤—É."},{title:"6 –æ–∫—Ç—è–±—Ä—è 2019",name:"–í–ª–∞–¥–∏—Å–ª–∞–≤ –†—ã–ª—å",description:"–ú–µ—á—Ç—ã —Å–±—ã–≤–∞—é—Ç—Å—è! –û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ\n    –∑–∞ –ø–æ–µ–∑–¥–∫—É –≤ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä: –ø–æ–º–æ—â—å —Å\n    –≤–∏–∑–æ–π, –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –æ—Ç–µ–ª—è –∏\n    –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –ø–µ—Ä–µ–ª–µ—Ç!"},{title:"5 –∏—é–Ω—è 2020",name:"–í–∏–∫—Ç–æ—Ä–∏—è –ü–æ–∫–ª–æ–Ω—Å–∫–∞—è",description:'–û—Ç–¥—ã—Ö –Ω–∞ –ü–∞—Ç–∞–µ, —è–Ω–≤–∞—Ä—å 2020–≥. –¢–∞–Ω—é—à–µ –æ–≥—Ä–æ–º–Ω—ã–π —Ä–µ—Å–ø–µ–∫—Ç –∑–∞ —ç—Ç–æ—Ç –æ—Ç–µ–ª—å!!!! –ú—ã –æ—á–µ–Ω—å —Ç—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫ –æ—Ç–µ–ª—è–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏. –ù–æ –æ–Ω–∞ —Å–º–æ–≥–ª–∞ –±–æ–ª–µ–µ —á–µ–º —É–≥–æ–¥–∏—Ç—å! –ü–∏—à—É —Å–ø—É—Å—Ç—è –ø–æ—á—Ç–∏ 5 –º–µ—Å—è—Ü–µ–≤ (–¥–∞–ª–∞ –≤—Ä–µ–º—è —Å–µ–±–µ –æ—Å—Ç—ã—Ç—å –æ—Ç –≤—Å–µ—Ö —ç–º–æ—Ü–∏–π –∏ –Ω–∞—à–µ–π –ø–∞–Ω–¥–µ–º–∏–∏) D\n    Varee Jomtien Beach 4*- —ç—Ç–æ —Å–∫–∞–∑–∫–∞!!!\n    –°–µ—Ä–≤–∏—Å –≤—ã—à–µ –≤—Å–µ—Ö –ø–æ—Ö–≤–∞–ª, –æ—Ç–µ–ª—å —Ä–µ–∞–ª—å–Ω–æ —Ç—è–Ω–µ—Ç –Ω–∞ 5*. –ü—Ä–æ—á–∏—Ç–∞–≤ –æ—Ç–∑—ã–≤—ã –æ–± –æ—Ç–µ–ª–µ, —è –æ–∂–∏–¥–∞–ª–∞ –æ–±—ã—á–Ω—ã–π –∞–∑–∏–∞—Ç—Å–∫–∏–π –æ—Ç–µ–ª—å (—Å–æ –≤—Å–µ–º–∏\n    "–ø—Ä–∏–∫–æ–ª–∞–º–∏"), –Ω–æ –∑–∞—Å–µ–ª–∏–≤—à–∏—Å—å –≤ –Ω–æ–º–µ—Ä –±—ã–ª–∞ –ø—Ä–∏—è—Ç–Ω–æ —É–¥–∏–≤–ª–µ–Ω–∞. –ó–∞–≤—Ç—Ä–∞–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ. –ü–µ—Ä—Å–æ–Ω–∞–ª –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ —É—Å–ª—É–∂–ª–∏–≤–æ-–ø—Ä–∏–≤–µ—Ç–ª–∏–≤, —Ñ–∏—Ç–Ω–µ—Å –∑–∞–ª –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π, –Ω–æ –µ—Å—Ç—å –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ. –ù–æ, –º—ã –µ—Ö–∞–ª–∏ –Ω–µ —Ä–∞–¥–∏ –æ—Ç–µ–ª—è, –∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–±—ã–≤–∞—Ç—å –Ω–∞ —Å–ª–æ–Ω–æ–≤–æ–π —Ñ–µ—Ä–º–µ, –Ω–∞ –∫—Ä–æ–∫–æ–¥–∏–ª–æ–≤–æ–π —Ñ–µ—Ä–º–µ, –≤ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–º –ø–∞—Ä–∫–µ –ù–æ–Ω–ì–Ω—É—á, —à–æ—É –ê–ª—å–∫–∞–∑–∞—Ä (—Ä–µ–±–µ–Ω–æ–∫ –Ω–µ–º–Ω–æ–≥–æ –±—ã–ª –≤ —à–æ–∫–µ). –í–æ–æ–±—â–µ–º –æ—Ç–¥—ã—Ö —É–¥–∞–ª—Å—è!!!\n    –¢–∞–Ω—é—à–µ —Å–ø–∞—Å–∏–±–æ!!! '},{title:"5 —Ñ–µ–≤—Ä–∞–ª—è 2020",name:"–í–ª–∞–¥–∏—Å–ª–∞–≤ –ü–∞–Ω–∞—Å–µ–Ω–∫–æ",description:"–û—Ç–¥—ã—Ö–∞–ª–∏ –≤ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ç—É—Ä–µ\n    –ë–æ–ª–≥–∞—Ä–∏—è + –ì—Ä–µ—Ü–∏—è. –í –ë–æ–ª–≥–∞—Ä–∏–∏ –±—ã–ª–∏ –Ω–∞ –≥–æ—Ä–Ω–æ–ª—ã–∂–Ω–æ–º –∫—É—Ä–æ—Ä—Ç–µ –ë–∞–Ω—Å–∫–æ, –≤ –æ—Ç–µ–ª–µ\n    Sport Hotel 9 –Ω–æ—á–µ–π. –í –ì—Ä–µ—Ü–∏–∏ –≤\n    –°–∞–ª–æ–Ω–∏–∫–∞—Ö –±—ã–ª–∏ —Ç–æ–ª—å–∫–æ 1 –¥–µ–Ω—å –∏ —ç—Ç–æ–≥–æ –±—ã–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ).\n    –í–æ–æ–±—â–µ–º –ø–æ–µ–∑–¥–∫–æ–π –æ—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω—ã.\n    –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ, –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫\n    –í–∞–º –µ—â—ë."},{title:"12 –∏—é–ª—è 2020",name:"–ï–ª–µ–Ω–∞ –ö—É–Ω–∞–∫",description:"–° —Å–µ–Ω—Ç—è–±—Ä–µ 2019 –º—ã —Å –º—É–∂–µ–º –ø–æ–ª–µ—Ç–µ–ª–∏, –Ω–∞–∫–æ–Ω–µ—Ü, –Ω–∞ –Ω–µ–¥–µ–ª—é –≤ –ò—Ç–∞–ª–∏—é –ö¬©!\n    –ü—Ä–∏–ª–µ—Ç–µ–ª–∏ –≤ –†–∏–º–∏–Ω–∏, —Ç–∞–º –≤—Å—ë –≤—Ä–µ–º—è –∂–∏–ª–∏, –µ–ª–∏-–ø–∏–ª–∏, –≥—É–ª—è–ª–∏, –∏ –ø–ª–∞–≤–∞–ª–∏!\n    –í—ã–µ–∑–∂–∞–ª–∏ –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –≤ –†–∏–º, –í–µ–Ω–µ—Ü–∏—é, –°–∞–Ω- –ú–∞—Ä–∏–Ω–æ –∏ –§–ª–æ—Ä–µ–Ω—Ü–∏—é.\n    –í—Å—ë –±—ã–ª–æ –æ—Ç–ª–∏—á–Ω–æ \n    ‚Ä¢ –Ω–æ –∑–∞ 3 —á–∞—Å–∞ –¥–æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç —É –Ω–∞—Å –∏–∑-–ø–æ–¥ –Ω–æ—Å–∞ —É–≤–µ–ª–∏ —Å—É–º–∫—É —Å –ø–∞—Å–ø–æ—Ä—Ç–∞–º–∏!!! \n    –ñ—É—Ç—å –∏ –∫–æ—à–º–∞—Ä!!! –ù–µ –±—É–¥—É –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, —Å–∫–∞–∂—É —Ç–æ–ª—å–∫–æ, —á—Ç–æ –Ω–∞—à –æ—Ç–ø—É—Å–∫ –ø—Ä–æ–¥–ª–∏–ª—Å—è –Ω–∞ 4 –¥–Ω—è!)) \n    –∏ —Ç–µ–ø–µ—Ä—å —è –∑–Ω–∞—é –∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ –ø–æ—Å–æ–ª—å—Å—Ç–≤–æ, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –†–∏–º –≤–µ—á–µ—Ä–æ–º –∏ –Ω–æ—á—å—é() —É –Ω–∞—Å —É–∂–µ –Ω–æ–≤—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ –∏ –º—ã –≥–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º"},{title:"21 —Ñ–µ–≤—Ä–∞–ª—è 2020",name:"–¢–∞—Ç—å—è–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞",description:"–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥ —Å –æ—Ç–¥—ã—Ö–∞ –∏–∑\n    –ó–∞–Ω–∑–∏–±–∞—Ä–∞. –í—Å–µ –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!\n    –ß–∏—Å—Ç—ã–π –∏ –Ω–æ–≤—ã–π –æ—Ç–µ–ª—å, –º–æ—Ä–µ –∫—Ä–∞—Å–∏–≤–µ–Ω–Ω–æ–µ, –±–∏—Ä—é–∑–æ–≤–æ–µ, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã +29, –∫–æ–ª–æ—Ä–∏—Ç–Ω—ã–µ –ª—é–¥–∏, –≤–µ–∑–¥–µ —Å–≤–µ–∂–∏–µ –∏ –≤–∫—É—Å–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã.\n    –í—Å–µ –Ω–∞—à–∏ –ø–æ–µ–∑–¥–∫–∏ –±—Ä–æ–Ω–∏—Ä—É–µ–º —á–µ—Ä–µ–∑\n    IGtours!\n    –¢–∞–Ω–µ—á–∫–∞ —Å–ø–∞—Å–∏–±–æ –í–∞–º –±–æ–ª—å—à–æ–µ! –í—ã —É–º–µ–µ—Ç–µ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –º–µ—á—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å!"},{title:"24 –∏—é–ª—è 2020",name:"–†—É—Å–ª–∞–Ω–∞ –†—É–¥–µ–Ω–∫–æ",description:"–í—á–µ—Ä–∞ —Å–µ–º—å—ë–π –ø—Ä–∏–ª–µ—Ç–µ–ª–∏ —Å –æ—Ç–¥—ã—Ö–∞.\n    –í—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞–º–∏ –æ—Ç–µ–ª—å –ø—Ä–µ–≤–∑–æ—à–µ–ª –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è! –®–∏–∫–∞—Ä–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∞—è –∑–æ–Ω–∞, –±–∏—Ä—é–∑–æ–≤–æ–µ –º–æ—Ä–µ, —Å–≤–µ–∂–∏–π –±—Ä–∏–∑ - —ç—Ç–æ –≤—Å–µ –∑–∞–ª–æ–≥ —Ö–æ—Ä–æ—à–∏—Ö —ç–º–æ—Ü–∏–π! –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤ –æ—Ç–µ–ª–µ –Ω–∞ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ: —É–±–æ—Ä–∫–∞ –Ω–æ–º–µ—Ä–æ–≤, —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏.\n    –ß–µ—Ä–µ–∑ IGtours –±–µ—Ä–µ–º –æ—Ç–¥—ã—Ö —É–∂–µ 4-–π –≥–æ–¥ - –≤—Å–µ–≥–¥–∞ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ!!! –°–ø–∞—Å–∏–±–æ)"},{title:"18 —Å–µ–Ω—Ç—è–±—Ä—è 2020",name:"–ê–ª–ª–∞ –ì–∞–±—É–µ–≤–∞",description:"–•–æ—Ç–µ–ª–æ—Å—å —Ç–∏—Ö–æ–≥–æ –∏ –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞.\n    –û—Ç–µ–ª—å Kriss –æ–ø—Ä–∞–≤–¥–∞–ª –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è.\n    –£—é—Ç–Ω–æ –∏ –ø–æ-—Å–µ–º–µ–π–Ω–æ–º—É. –£—Ö–æ–∂–µ–Ω–Ω–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ä–∞—Å—Ç–µ–Ω–∏–π, –ª–∞—Å–∫–æ–≤—ã–µ –∫–æ—à–∫–∏.) –ß–∏—Å—Ç—ã–π –±–∞—Å—Å–µ–π–Ω –±–µ–∑ –æ—Å–æ–±–æ–≥–æ –∑–∞–ø–∞—Ö–∞ —Ö–ª–æ—Ä–∞. –ë–µ–∑ –∏–∑—ã—Å–∫–æ–≤, —Ö–æ—Ä–æ—à–µ–µ –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ.\n    –ß–∏—Å—Ç—ã–µ –∫–æ–º–Ω–∞—Ç—ã. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª. –ü–æ-–¥–æ–º–∞—à–Ω–µ–º—É —É—é—Ç–Ω–æ. –û—Ç–∫–∞–∑–∞–ª–∏—Å—å –±—Ä–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞—Å–µ–ª–µ–Ω–∏–∏.\n    –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∏–Ω—É—Å- –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–ª—è–∂–∞. –•–æ–¥–∏–ª–∞ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–π. –ù–∏—á–µ–≥–æ.\n    –ó–∞—Ç–æ –∫–∞–∫–∏–µ –≤–∏–¥—ã –ø–æ –ø—É—Ç–∏ : —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ü–≤–µ—Ç—ã, –±–µ–ª—ã–µ –¥–æ–º–∏–∫–∏, –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è. –ò –º–æ—Ä–µ –ø–∞—Ö–Ω–µ—Ç –∞—Ä–±—É–∑–æ–º. \n    –ù–æ –≤—Å–µ —Ö–æ—Ä–æ—à–µ–µ –±—ã—Å—Ç—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è : —É—Å–ø–µ–ª–∞ –ø–æ–±—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–¥–Ω–æ–π —ç–∫—Å–∫—É—Ä—Å–∏–∏: –≤ –ü–∞-–ú—É–∫–∫–∞–ª–µ, –∫–æ—Ç–æ—Ä–∞—è –æ—Å—Ç–∞–≤–∏–ª–∞ –º–Ω–æ–≥–æ –ø—Ä–∏—è—Ç–Ω—ã—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π.. –∏ —Ñ–æ—Ç–æ.)\n    –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–µ–º –∫—Ç–æ –Ω–µ –≥–æ–ª—É–±—ã—Ö –∫—Ä–æ–≤–µ–π.) –û–±–µ—â–∞—é –≤–µ—Ä–Ω—É—Ç—å—Å—è.)\n    –û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º-–Ω–∞—Å—Ç–æ—è—â–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º"},{title:"09 –∞–≤–≥—É—Å—Ç–∞ 2020",name:"–ê–Ω–∞—Ç–æ–ª–∏–π –ì—Ä–∏—â–µ–Ω–∫–æ",description:"–û—á–µ–Ω—å –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã –∫–æ–º–ø–∞–Ω–∏–∏ IG tours –∑–∞ —á–µ—Ç–∫—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–∞.\n    –ú–æ—è —Å–µ–º—å—è –∏ –Ω–∞—à–∏ –¥—Ä—É–∑—å—è –±–æ–ª–µ–µ –¥–µ—Å—è—Ç–∏ –ª–µ—Ç —Ç–µ—Å–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –Ω–∏–º–∏ –∏ –æ—á–µ–Ω—å —É–¥–∞—á–Ω–æ. \n    –î–∞–∂–µ –≤ –∫—Ä–∞–π–Ω–µ —Ç—è–∂–µ–ª—ã–π –¥–ª—è —Ç—É—Ä–∏–∑–º–∞ 2020 –≥–æ–¥ –¢–∞—Ç—å—è–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞ –ø–æ–æ–±–µ—â–∞–ª–∞ –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª–∞ –Ω–∞–º —Å–µ–º–µ–π–Ω—ã–π –æ—Ç–¥—ã—Ö –≤ –¥–µ–∫–∞–±—Ä–µ –≤ –ï–≥–∏–ø—Ç–µ —Å –≤–Ω—É—á–∫–æ–π. \n    –û–Ω–∞ –¥–∞–∂–µ —Å—É–º–µ–ª–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–∞–º —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Å–¥–∞—á—É –ü–¶–†-—Ç–µ—Å—Ç–æ–≤. \n    –ë—ã–ª–æ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ. \n    –û–Ω–∞ –∑–Ω–∞–µ—Ç —á—Ç–æ –∫–æ–º—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–∑ –µ–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã–º–∏. \n    –ê –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É –Ω–µ –æ–≥—Ä–æ–º–Ω—ã–µ. –ù–∞ –ª—é–±–æ–π –≤–∫—É—Å –∂–µ–ª–∞–Ω–∏–µ –∏ –∫–æ—à–µ–ª–µ–∫. \n    –ö—Ç–æ —Ö–æ—á–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å–≤–æ–∏ –ø–ª–∞–Ω—ã –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º —Ç—É—Ä–∞–º —Å –æ—Ç–¥—ã—Ö–æ–º –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —ç—Ç—É –∫–æ–º–ø–∞–Ω–∏—é IGtours –∏ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–¥—ã—Ö –≤–∞–º –æ–±–µ—Å–ø–µ—á–µ–Ω –∏ –≤—Å–µ –±—É–¥–µ—Ç –û–ö !!! \n    –°–ü–ê–°–ò–ë–û, –¢–ê–ù–ï–ß–ö–ê."},{title:"16 –æ–∫—Ç—è–±—Ä—è 2021",name:"–ù–∞—Ç–∞–ª—å—è –ú–∏—â–µ–Ω–∫–æ",description:'–¢–æ–ª—å–∫–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ –ï–≥–∏–ø—Ç–∞.\n    –û—Ç–¥—ã—Ö–∞–ª–∏ –≤ –æ—Ç–µ–ª–µ ¬´Albatros Vista\n    Resort" 5*\n    –ú–æ—è –æ—Ü–µ–Ω–∫–∞ –æ—Ç–µ–ª—é - 4.5, –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Ä—ã–±–æ–∫ —Ç–æ–ª—å–∫–æ –Ω–µ—Ç.\n    –ö–æ—Ä–º–∏–ª–∏ –≤–∫—É—Å–Ω–æ, —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∫—Ä–∞—Å–∏–≤–∞—è, –æ—Å–æ–±–µ–Ω–Ω–æ –≤–µ—á–µ—Ä–æ–º, –º—É–∑—ã–∫–∞ –∂–∏–≤–∞—è –∏ –ø–µ–Ω–∏–µ , –ø–µ—Ä—Å–æ–Ω–∞–ª –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π, –≤—Å–µ —á–∏—Å—Ç–æ, –ø–ª—è–∂ —à–∏–∫–∞—Ä–Ω—ã–π —Å–¥–µ–ª–∞–ª–∏, –Ω–µ –≤ –∫–∞–∂–¥–æ–º –æ—Ç–µ–ª–µ –≤ –¢—É—Ä—Ü–∏–∏ —Ç–∞–∫–æ–π –±–æ–ª—å—à–æ–π. –†—ã–±–∫–∏ –∏ –≥–ª—É–±–∏–Ω–∞ –º–æ—Ä—è - –≤–æ—Ç —á–µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ.\n    –° –¥–µ—Ç–∫–∞–º–∏ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —Ç—É—Ç —Ö–æ—Ä–æ—à–æ. –ò –Ω–µ–º–Ω–æ–≥–æ –¥–µ—Ä–µ–≤—å—è –ø–æ–¥—Ä–∞—Å—Ç—É—Ç –µ—â—ë, –≤–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–∞–¥–∏–ª–∏.'},{title:"15 –Ω–æ—è–±—Ä—è 2021",name:"–í–µ—Ä–∞ –ö–∞—Ç–ª–∞–Ω",description:"–í–ø–µ—Ä–≤—ã–µ —É –º–µ–Ω—è —Å–ª—É—á–∏–ª—Å—è –æ—Ç–¥—ã—Ö –≤ –æ–∫—Ç—è–±—Ä–µ!\n    –° –ø–æ–º–æ—â—å—é –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞ –õ–æ–º–∞–∫–∏–Ω–∞ –¢–∞—Ç—å—è–Ω–∞.\n    –í—ã–±—Ä–∞–ª–∞ –æ—Ç–µ–ª—å Latte Beach Hotel\n    (–ö–µ–º–µ—Ä, –¢—É—Ä—Ü–∏—è). \n    –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ö–æ—Ä–æ—à–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –±—ã—Ç—É? –æ–±—Ö–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—É –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π –ø–æ–≥–æ–¥–µ 7 –¥–Ω–µ–π –∏ 7 –Ω–æ—á–µ–π –ø—Ä–æ–ª–µ—Ç–µ–ª–∏ –±—ã—Å—Ç—Ä–æ –∏ —Å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ (—Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞–ª–∏ —ç–∫—Å–∫—É—Ä—Å–∏–∏ Tahtaly, Pammukale, Demre). \n    –í–∑—è–ª–∞ –Ω–∞ –∑–∞–º–µ—Ç–∫—É: –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å!"},{title:"10 –∏—é–ª—è 2020",name:"–ê–Ω–¥—Ä–µ–π –°—Ç–µ–ª—å–º–∞—Ö",description:"–®—Ä–∏-–õ–∞–Ω–∫–∞.–û—Ç–µ–ª—å Amagi Beach\n    –ü–æ–ø–∞–ª–∏ –≤ —ç—Ç–æ—Ç –æ—Ç–µ–ª—å –∏–∑ –∑–∞ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ –≤\n    –ö–∏—Ç–∞–µ.–ü—Ä–∏—à–ª–æ—Å—å —Å—Ä–æ—á–Ω–æ –º–µ–Ω—è—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∏, –≤–æ–æ–±—â–µ–º,–Ω–µ –ø–æ–∂–∞–ª–µ–ª–∏.\n    –°—Ä–∞–≤–Ω–∏–≤–∞–ª–∏ —Ç–æ, —á—Ç–æ –Ω–∞—á–∏—Ç–∞–ª–∏—Å—å –æ –•–∞–π–Ω–∞–Ω–µ –∏ –æ—Ç–¥—ã—Ö –≤ –ú–∞—Ä–∞–≤–∏–ª–µ, –ª–∏—à–Ω–∏–π —Ä–∞–∑ —É–±–µ–¥–∏–ª–∏—Å—å-–Ω–µ –±—ã–ª–æ –±—ã —Å—á–∞—Å—Ç—å—è –¥–∞ –Ω–µ—Å—á–∞—Å—Ç—å–µ –ø–æ–º–æ–≥–ª–æ.\n    –ù–æ –Ω–∞ –≤–∫—É—Å –∏ —Ü–≤–µ—Ç...\n    –û—Ç–µ–ª—å –∫–∞–∫ –æ—Ç–µ–ª—å,–±—é–¥–∂–µ—Ç–Ω—ã–π, –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∫–µ–∞–Ω–∞,—Ü–µ–Ω–∞-–∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç.\n    –í –Ω–æ–º–µ—Ä–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–ª–∏–∂–µ –∫ —Ä–µ—Ü–µ–ø—à–µ–Ω,–ª—é–±—É—é –ø—Ä–æ—Å—å–±—É –≤—ã–ø–æ–ª–Ω—è—é—Ç, –∫–∞–∫ —É–º–µ—é—Ç.\n    –í –¥–µ—Ñ–∏—Ü–∏—Ç–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏, –Ω–æ –ø–æ–æ–±–µ—â–∞–ª–∏,–∏ —á–µ—Ä–µ–∑ –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–ª–∏.–í –¥–µ–Ω—å –æ—Ç—ä–µ–∑–¥–∞ –ø—Ä–æ—Å–∏–ª–∏ –≤–µ—Å—ã, –≤–∑–≤–µ—Å–∏—Ç—å –±–∞–≥–∞–∂,–ø—Ä–∏–Ω–µ—Å–ª–∏, –ø—Ä–∞–≤–¥–∞,–æ–Ω–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∏.\n    –ù–æ –≤–µ–¥—å –ø—Ä–∏–Ω–µ—Å–ª–∏!\n    –í –ú–∞—Ä–∞–≤–∏–ª–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –æ—Å–æ–±–æ –∏ –Ω–µ—Ç.\n    –¢–∏—Ö–∞—è –∏ —Å–ø–æ–∫–æ–π–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è.\n    –ú–µ—Å—Ç–Ω—ã–µ –∂–∞–ª—É—é—Ç—Å—è –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ç—É—Ä–∏—Å—Ç–æ–≤. \n    –ö –Ω–∞—à–µ–π —Å–æ—Å–µ–¥–∫–µ –ø–æ–¥—Ö–æ–¥–∏–ª —Ö–æ–∑—è–∏–Ω –æ—Ç–µ–ª—è, –ø—Ä–æ—Å–∏–ª –≤ –¥—Ä—É–≥–∏–µ –∫–∞—Ñ–µ –Ω–µ —Ö–æ–¥–∏—Ç—å, —ç–∫—Å–∫—É—Ä—Å–∏–∏ –±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–µ–ª–µ.\n    –û–Ω–∞,–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –≤—Å–µ –¥–µ–ª–∞–ª–∞ –Ω–∞–æ–±–æ—Ä–æ—Ç.\n    –ù–û —ç—Ç–æ —Ç–∞–∫ —Å–µ–±–µ,–≤–ø–µ—á–∞—Ç–ª–Ω–Ω–∏–π –æ—Ç –æ—Ç–µ–ª—è –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–µ –∏—Å–ø–æ—Ä—Ç–∏–ª–æ.\n    –ú—ã –Ω–µ–º–Ω–æ–≥–æ —É–¥–∏–≤–∏–ª–∏—Å—å, —É–≤–∏–¥–µ–≤ –≤ –æ—Ç–µ–ª–µ –∏ –≤ —Å–∞–º–æ–π –ú–∞—Ä–∞–≤–∏–ª–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –º–æ–ª–æ–¥–µ–∂–∏ –æ—Ç –¥–≤–∞–¥—Ü–∞—Ç–∏ –ø—è—Ç–∏ –∏ —Å—Ç–∞—Ä—à–µ.\n    –ì—Ä—É—Å—Ç–Ω—ã–º–∏ –∏ —Å–∫—É—á–Ω—ã–º–∏ –æ–Ω–∏ –Ω–µ –≤—ã–≥–ª—è –¥–µ–ª–∏,—Å–∫–æ—Ä–µ–µ,–Ω–∞–æ–±–æ—Ä–æ—Ç.\n    –ù–∞—à–∏ —Å–æ—Å–µ–¥–∏-–º–æ–ª–æ–¥–∞—è –ø–∞—Ä–∞ –∏–∑\n    –ü–∏—Ç–µ—Ä–∞-—Å–∫–∞–∑–∞–ª–∏, —á—Ç–æ –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ —Å—á–∞—Å—Ç–ª–∏–≤—ã, –ø–æ—Å–ª–µ –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—É–µ—Ç—ã, –Ω–µ—Ä–≤–æ—Ç—Ä–µ–ø–∫–∏ –∏ —Å—ã—Ä–æ—Å—Ç–∏, –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –¥–µ—Å—è—Ç—å –¥–Ω–µ–π –≤ —Ç–∏—à–∏–Ω–µ –∏ –ø–æ–∫–æ–µ. \n    –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ-–û–ö–ï–ê–ù –∏ –ø—Ä–∏–±—Ä–µ–∂–Ω–∞—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –ø–æ–ª–æ—Å–∞ –ø–µ—Å–∫–∞ –ø–æ–¥ –ø–∞–ª—å–º–∞–º–∏.\n    –í –æ—Ç–µ–ª–µ –µ—Å—Ç—å —Å–≤–æ–π –ø–ª—è–∂, –º–æ–∂–Ω–æ –Ω–∞–∫—É–ø–∞—Ç—å—Å—è, —Å–ø–æ–ª–æ—Å–Ω—É—Ç—å—Å—è –ø–æ–¥ –¥—É—à–µ–º —É –±–∞—Å—Å–µ–π–Ω–∞ –∏ —Å–∏–¥–µ—Ç—å –Ω–∞ —Ç–µ—Ä–∞—Å—Å–µ —É —Å–≤–æ–µ–≥–æ –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ —É —Å—Ç–æ–ª–∏–∫–æ–≤ –ø–æ–¥ –ø–∞–ª—å–º–∞–º–∏ –Ω–∞ —Ç—Ä–∞–≤–µ.\n    –ï—Å—Ç—å –±–∞—Å—Å–µ–π–Ω, –Ω–æ, –ø–æ –º–æ–µ–º—É, –±–∞—Å—Å–µ–π–Ω –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∫–µ–∞–Ω–∞-—ç—Ç–æ —Ö–æ–∫–∫–µ–π –Ω–∞ —Ç—Ä–∞–≤–µ –∏ –±–∞–ª–µ—Ç –Ω–∞ –ª—å–¥—É(–§.–†–∞–Ω–µ–≤—Å–∫–∞—è). \n    –ü–ª—è–∂–µ–º –Ω–∞–∑–≤–∞—Ç—å –±–µ—Ä–µ–≥ —Å–ø—Ä–∞–≤–∞ –æ—Ç –æ—Ç–µ–ª—è —Ç—Ä—É–¥–Ω–æ, –Ω–∏–∫–∞–∫–∏—Ö –∑–æ–Ω—Ç–∏–∫–æ–≤, –ª–µ–∂–∞–∫–æ–≤, —Ç–æ—Ä–≥–æ–≤—Ü–µ–≤ –≤—Å—è–∫–æ–π –µ—Ä—É–Ω–¥–æ–π. \n    –¢–æ–ª—å–∫–æ –∏–∑—Ä–µ–¥–∫–∞ —Ä—ã–±–∞–∫–∏ –∏–ª–∏ —Å–µ—Ç–∏ —á–∏–Ω—è—Ç, –∏–ª–∏ —É–ª–æ–≤ –ø–µ—Ä–µ–±–∏—Ä–∞—é—Ç.\n    –ú–µ—Å—Ç–Ω—ã–µ —É–±–∏—Ä–∞—é—Ç—Å—è –≤–æ –¥–≤–æ—Ä–∞—Ö,—á—Ç–æ —Ç–æ –¥–µ–ª–∞—é—Ç –ø–æ —Ö–æ–∑—è–π—Å—Ç–≤—É, –∏—Ö –¥–≤–æ—Ä—ã –ø–æ–¥—Ö–æ–¥—è—Ç –ø–æ—á—Ç–∏ –∫ –æ–∫–µ–∞–Ω—É.\n    –¢–∞–º, –≥–¥–µ –º—ã —á–∞—Å—Ç–æ –∫—É–ø–∞–ª–∏—Å—å, —Ö–æ–∑—è–∏–Ω —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Ç–∞—â–∏–ª —Å–≤–æ—é —Å–æ–±–∞–∫—É –∫—É–ø–∞—Ç—å—Å—è, –¥–ª—è –ø–æ—Ä—è–¥–∫–∞ –æ–Ω–∞ –Ω–µ–º–Ω–æ–≥–æ —É–ø–∏—Ä–∞–ª–∞—Å—å.\n    –ù–∞ –†–æ—É–¥ –ë–∏—á, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Ç–µ–ª—å, –µ—Å—Ç—å –∫–∞—Ñ–µ, –Ω–µ–º–Ω–æ–≥–æ –ª–∞–≤–æ–∫(–í–û–î–ê,–§–†–£–ö–¢–´).\n    –†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é —Ä—ã–Ω–æ–∫ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø—Ä–∏–≥–æ—Ç–æ–≤—è—Ç –∏ –≤ –æ—Ç–µ–ª–µ, –∏ –≤ –ª—é–±–æ–º –∫–∞—Ñ–µ.\n    –í —Ü–µ–Ω—Ç—Ä, –≥–¥–µ –º–∞–≥–∞–∑–∏–Ω—ã –æ–±–º–µ–Ω–Ω–∏–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–∂. –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –∞–≤—Ç–æ–±—É—Å–æ–≤, –º–æ–∂–Ω–æ –Ω–∞ —Ç—É–∫ —Ç—É–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ—è—Ç –ø–æ–¥ –æ—Ç–µ–ª–µ–º, –º–æ–∂–Ω–æ, –ø–∏—Å–∞–ª–∏, –ø–µ—à–∫–æ–º.\n    –ù–û —Ç—Ä–∏–¥—Ü–∞—Ç—å, —Å–æ—Ä–æ–∫ –º–∏–Ω—É—Ç –ø–æ –∂–∞—Ä–µ-—É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –µ—â–µ —Ç–æ.\n    –ü–æ–Ω—è—Ç–∏–µ —Ö–æ—Ä–æ—à–µ–≥–æ –æ—Ç–¥—ã—Ö–∞ —É –≤—Å–µ—Ö —Å–≤–æ–µ.\n    –ù–æ —è –Ω–µ –∂–∞–ª–µ—é, —á—Ç–æ –ø—Ä–∏—à–ª–æ—Å—å –º–µ–Ω—è—Ç—å –±–µ—Ç–æ–Ω–Ω—ã–µ –≤—ã—Å–æ—Ç–∫–∏ –î–∞–¥—É–Ω—Ö–∞—è –Ω–∞ –¥–µ—Ä–µ–≤–µ–Ω—Å–∫—É—é —Ç–∏—à–∏–Ω—É –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –ú–∞—Ä–∞–≤–∏–ª—ã"}],i=document.querySelector(".swiper-wrapper"),a="en";function r(e){var n,s=e.map((function(e){var t=e.title,n=e.name,s=e.description,i=document.createElement("div");return i.className="swiper-slide",i.innerHTML+='\n      <div class="swiper-slide__title">\n        <p class="swiper-slide__name">'.concat(n,'</p>\n        <p class="swiper-slide__time">').concat(t,'</p>\n      </div>\n      <p class="swiper-slide__description">').concat(s,"</p>"),i}));i.innerHTML="",i.append.apply(i,function(e){if(Array.isArray(e))return t(e)}(n=s)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var s=Object.prototype.toString.call(e).slice(8,-1);return"Object"===s&&e.constructor&&(s=e.constructor.name),"Map"===s||"Set"===s?Array.from(e):"Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)?t(e,n):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())}function o(t){document.querySelectorAll("[data-lang]").forEach((function(n){n.innerText=e[t][n.getAttribute("data-lang")]}))}r(s);var l=document.querySelector(".button");l.addEventListener("click",(function(){switch(console.log(a),a){case"en":r(n),o("en"),a="uk",l.innerText="UK";break;case"uk":r(s),o("uk"),a="en",l.innerText="EN"}ie[0].update()}))}));const i={body:{},addEventListener(){},removeEventListener(){},activeElement:{blur(){},nodeName:""},querySelector:()=>null,querySelectorAll:()=>[],getElementById:()=>null,createEvent:()=>({initEvent(){}}),createElement:()=>({children:[],childNodes:[],style:{},setAttribute(){},getElementsByTagName:()=>[]}),createElementNS:()=>({}),importNode:()=>null,location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function a(){const e="undefined"!=typeof document?document:{};return s(e,i),e}const r={document:i,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState(){},pushState(){},go(){},back(){}},CustomEvent:function(){return this},addEventListener(){},removeEventListener(){},getComputedStyle:()=>({getPropertyValue:()=>""}),Image(){},Date(){},screen:{},setTimeout(){},clearTimeout(){},matchMedia:()=>({}),requestAnimationFrame:e=>"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0),cancelAnimationFrame(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function o(){const e="undefined"!=typeof window?window:{};return s(e,r),e}class l extends Array{constructor(e){"number"==typeof e?super(e):(super(...e||[]),function(e){const t=e.__proto__;Object.defineProperty(e,"__proto__",{get:()=>t,set(e){t.__proto__=e}})}(this))}}function d(e=[]){const t=[];return e.forEach((e=>{Array.isArray(e)?t.push(...d(e)):t.push(e)})),t}function c(e,t){return Array.prototype.filter.call(e,t)}function p(e,t){const n=o(),s=a();let i=[];if(!t&&e instanceof l)return e;if(!e)return new l(i);if("string"==typeof e){const n=e.trim();if(n.indexOf("<")>=0&&n.indexOf(">")>=0){let e="div";0===n.indexOf("<li")&&(e="ul"),0===n.indexOf("<tr")&&(e="tbody"),0!==n.indexOf("<td")&&0!==n.indexOf("<th")||(e="tr"),0===n.indexOf("<tbody")&&(e="table"),0===n.indexOf("<option")&&(e="select");const t=s.createElement(e);t.innerHTML=n;for(let e=0;e<t.childNodes.length;e+=1)i.push(t.childNodes[e])}else i=function(e,t){if("string"!=typeof e)return[e];const n=[],s=t.querySelectorAll(e);for(let e=0;e<s.length;e+=1)n.push(s[e]);return n}(e.trim(),t||s)}else if(e.nodeType||e===n||e===s)i.push(e);else if(Array.isArray(e)){if(e instanceof l)return e;i=e}return new l(function(e){const t=[];for(let n=0;n<e.length;n+=1)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(i))}p.fn=l.prototype;const u="resize scroll".split(" ");function h(e){return function(...t){if(void 0===t[0]){for(let t=0;t<this.length;t+=1)u.indexOf(e)<0&&(e in this[t]?this[t][e]():p(this[t]).trigger(e));return this}return this.on(e,...t)}}h("click"),h("blur"),h("focus"),h("focusin"),h("focusout"),h("keyup"),h("keydown"),h("keypress"),h("submit"),h("change"),h("mousedown"),h("mousemove"),h("mouseup"),h("mouseenter"),h("mouseleave"),h("mouseout"),h("mouseover"),h("touchstart"),h("touchend"),h("touchmove"),h("resize"),h("scroll");const m={addClass:function(...e){const t=d(e.map((e=>e.split(" "))));return this.forEach((e=>{e.classList.add(...t)})),this},removeClass:function(...e){const t=d(e.map((e=>e.split(" "))));return this.forEach((e=>{e.classList.remove(...t)})),this},hasClass:function(...e){const t=d(e.map((e=>e.split(" "))));return c(this,(e=>t.filter((t=>e.classList.contains(t))).length>0)).length>0},toggleClass:function(...e){const t=d(e.map((e=>e.split(" "))));this.forEach((e=>{t.forEach((t=>{e.classList.toggle(t)}))}))},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(let n=0;n<this.length;n+=1)if(2===arguments.length)this[n].setAttribute(e,t);else for(const t in e)this[n][t]=e[t],this[n].setAttribute(t,e[t]);return this},removeAttr:function(e){for(let t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},transform:function(e){for(let t=0;t<this.length;t+=1)this[t].style.transform=e;return this},transition:function(e){for(let t=0;t<this.length;t+=1)this[t].style.transitionDuration="string"!=typeof e?`${e}ms`:e;return this},on:function(...e){let[t,n,s,i]=e;function a(e){const t=e.target;if(!t)return;const i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),p(t).is(n))s.apply(t,i);else{const e=p(t).parents();for(let t=0;t<e.length;t+=1)p(e[t]).is(n)&&s.apply(e[t],i)}}function r(e){const t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),s.apply(this,t)}"function"==typeof e[1]&&([t,s,i]=e,n=void 0),i||(i=!1);const o=t.split(" ");let l;for(let e=0;e<this.length;e+=1){const t=this[e];if(n)for(l=0;l<o.length;l+=1){const e=o[l];t.dom7LiveListeners||(t.dom7LiveListeners={}),t.dom7LiveListeners[e]||(t.dom7LiveListeners[e]=[]),t.dom7LiveListeners[e].push({listener:s,proxyListener:a}),t.addEventListener(e,a,i)}else for(l=0;l<o.length;l+=1){const e=o[l];t.dom7Listeners||(t.dom7Listeners={}),t.dom7Listeners[e]||(t.dom7Listeners[e]=[]),t.dom7Listeners[e].push({listener:s,proxyListener:r}),t.addEventListener(e,r,i)}}return this},off:function(...e){let[t,n,s,i]=e;"function"==typeof e[1]&&([t,s,i]=e,n=void 0),i||(i=!1);const a=t.split(" ");for(let e=0;e<a.length;e+=1){const t=a[e];for(let e=0;e<this.length;e+=1){const a=this[e];let r;if(!n&&a.dom7Listeners?r=a.dom7Listeners[t]:n&&a.dom7LiveListeners&&(r=a.dom7LiveListeners[t]),r&&r.length)for(let e=r.length-1;e>=0;e-=1){const n=r[e];s&&n.listener===s||s&&n.listener&&n.listener.dom7proxy&&n.listener.dom7proxy===s?(a.removeEventListener(t,n.proxyListener,i),r.splice(e,1)):s||(a.removeEventListener(t,n.proxyListener,i),r.splice(e,1))}}}return this},trigger:function(...e){const t=o(),n=e[0].split(" "),s=e[1];for(let i=0;i<n.length;i+=1){const a=n[i];for(let n=0;n<this.length;n+=1){const i=this[n];if(t.CustomEvent){const n=new t.CustomEvent(a,{detail:s,bubbles:!0,cancelable:!0});i.dom7EventData=e.filter(((e,t)=>t>0)),i.dispatchEvent(n),i.dom7EventData=[],delete i.dom7EventData}}}return this},transitionEnd:function(e){const t=this;return e&&t.on("transitionend",(function n(s){s.target===this&&(e.call(this,s),t.off("transitionend",n))})),this},outerWidth:function(e){if(this.length>0){if(e){const e=this.styles();return this[0].offsetWidth+parseFloat(e.getPropertyValue("margin-right"))+parseFloat(e.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){const e=this.styles();return this[0].offsetHeight+parseFloat(e.getPropertyValue("margin-top"))+parseFloat(e.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},styles:function(){const e=o();return this[0]?e.getComputedStyle(this[0],null):{}},offset:function(){if(this.length>0){const e=o(),t=a(),n=this[0],s=n.getBoundingClientRect(),i=t.body,r=n.clientTop||i.clientTop||0,l=n.clientLeft||i.clientLeft||0,d=n===e?e.scrollY:n.scrollTop,c=n===e?e.scrollX:n.scrollLeft;return{top:s.top+d-r,left:s.left+c-l}}return null},css:function(e,t){const n=o();let s;if(1===arguments.length){if("string"!=typeof e){for(s=0;s<this.length;s+=1)for(const t in e)this[s].style[t]=e[t];return this}if(this[0])return n.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(s=0;s<this.length;s+=1)this[s].style[e]=t;return this}return this},each:function(e){return e?(this.forEach(((t,n)=>{e.apply(t,[t,n])})),this):this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(let t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(let t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){const t=o(),n=a(),s=this[0];let i,r;if(!s||void 0===e)return!1;if("string"==typeof e){if(s.matches)return s.matches(e);if(s.webkitMatchesSelector)return s.webkitMatchesSelector(e);if(s.msMatchesSelector)return s.msMatchesSelector(e);for(i=p(e),r=0;r<i.length;r+=1)if(i[r]===s)return!0;return!1}if(e===n)return s===n;if(e===t)return s===t;if(e.nodeType||e instanceof l){for(i=e.nodeType?[e]:e,r=0;r<i.length;r+=1)if(i[r]===s)return!0;return!1}return!1},index:function(){let e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;const t=this.length;if(e>t-1)return p([]);if(e<0){const n=t+e;return p(n<0?[]:[this[n]])}return p([this[e]])},append:function(...e){let t;const n=a();for(let s=0;s<e.length;s+=1){t=e[s];for(let e=0;e<this.length;e+=1)if("string"==typeof t){const s=n.createElement("div");for(s.innerHTML=t;s.firstChild;)this[e].appendChild(s.firstChild)}else if(t instanceof l)for(let n=0;n<t.length;n+=1)this[e].appendChild(t[n]);else this[e].appendChild(t)}return this},prepend:function(e){const t=a();let n,s;for(n=0;n<this.length;n+=1)if("string"==typeof e){const i=t.createElement("div");for(i.innerHTML=e,s=i.childNodes.length-1;s>=0;s-=1)this[n].insertBefore(i.childNodes[s],this[n].childNodes[0])}else if(e instanceof l)for(s=0;s<e.length;s+=1)this[n].insertBefore(e[s],this[n].childNodes[0]);else this[n].insertBefore(e,this[n].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&p(this[0].nextElementSibling).is(e)?p([this[0].nextElementSibling]):p([]):this[0].nextElementSibling?p([this[0].nextElementSibling]):p([]):p([])},nextAll:function(e){const t=[];let n=this[0];if(!n)return p([]);for(;n.nextElementSibling;){const s=n.nextElementSibling;e?p(s).is(e)&&t.push(s):t.push(s),n=s}return p(t)},prev:function(e){if(this.length>0){const t=this[0];return e?t.previousElementSibling&&p(t.previousElementSibling).is(e)?p([t.previousElementSibling]):p([]):t.previousElementSibling?p([t.previousElementSibling]):p([])}return p([])},prevAll:function(e){const t=[];let n=this[0];if(!n)return p([]);for(;n.previousElementSibling;){const s=n.previousElementSibling;e?p(s).is(e)&&t.push(s):t.push(s),n=s}return p(t)},parent:function(e){const t=[];for(let n=0;n<this.length;n+=1)null!==this[n].parentNode&&(e?p(this[n].parentNode).is(e)&&t.push(this[n].parentNode):t.push(this[n].parentNode));return p(t)},parents:function(e){const t=[];for(let n=0;n<this.length;n+=1){let s=this[n].parentNode;for(;s;)e?p(s).is(e)&&t.push(s):t.push(s),s=s.parentNode}return p(t)},closest:function(e){let t=this;return void 0===e?p([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){const t=[];for(let n=0;n<this.length;n+=1){const s=this[n].querySelectorAll(e);for(let e=0;e<s.length;e+=1)t.push(s[e])}return p(t)},children:function(e){const t=[];for(let n=0;n<this.length;n+=1){const s=this[n].children;for(let n=0;n<s.length;n+=1)e&&!p(s[n]).is(e)||t.push(s[n])}return p(t)},filter:function(e){return p(c(this,e))},remove:function(){for(let e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}};Object.keys(m).forEach((e=>{Object.defineProperty(p.fn,e,{value:m[e],writable:!0})}));const f=p;function g(e,t=0){return setTimeout(e,t)}function v(){return Date.now()}function y(e){return"object"==typeof e&&null!==e&&e.constructor&&"Object"===Object.prototype.toString.call(e).slice(8,-1)}function w(...e){const t=Object(e[0]),n=["__proto__","constructor","prototype"];for(let i=1;i<e.length;i+=1){const a=e[i];if(null!=a&&(s=a,!("undefined"!=typeof window&&void 0!==window.HTMLElement?s instanceof HTMLElement:s&&(1===s.nodeType||11===s.nodeType)))){const e=Object.keys(Object(a)).filter((e=>n.indexOf(e)<0));for(let n=0,s=e.length;n<s;n+=1){const s=e[n],i=Object.getOwnPropertyDescriptor(a,s);void 0!==i&&i.enumerable&&(y(t[s])&&y(a[s])?a[s].__swiper__?t[s]=a[s]:w(t[s],a[s]):!y(t[s])&&y(a[s])?(t[s]={},a[s].__swiper__?t[s]=a[s]:w(t[s],a[s])):t[s]=a[s])}}}var s;return t}function b(e,t,n){e.style.setProperty(t,n)}function T({swiper:e,targetPosition:t,side:n}){const s=o(),i=-e.translate;let a,r=null;const l=e.params.speed;e.wrapperEl.style.scrollSnapType="none",s.cancelAnimationFrame(e.cssModeFrameID);const d=t>i?"next":"prev",c=(e,t)=>"next"===d&&e>=t||"prev"===d&&e<=t,p=()=>{a=(new Date).getTime(),null===r&&(r=a);const o=Math.max(Math.min((a-r)/l,1),0),d=.5-Math.cos(o*Math.PI)/2;let u=i+d*(t-i);if(c(u,t)&&(u=t),e.wrapperEl.scrollTo({[n]:u}),c(u,t))return e.wrapperEl.style.overflow="hidden",e.wrapperEl.style.scrollSnapType="",setTimeout((()=>{e.wrapperEl.style.overflow="",e.wrapperEl.scrollTo({[n]:u})})),void s.cancelAnimationFrame(e.cssModeFrameID);e.cssModeFrameID=s.requestAnimationFrame(p)};p()}let C,S,k;function x(){return C||(C=function(){const e=o(),t=a();return{smoothScroll:t.documentElement&&"scrollBehavior"in t.documentElement.style,touch:!!("ontouchstart"in e||e.DocumentTouch&&t instanceof e.DocumentTouch),passiveListener:function(){let t=!1;try{const n=Object.defineProperty({},"passive",{get(){t=!0}});e.addEventListener("testPassiveListener",null,n)}catch(e){}return t}(),gestures:"ongesturestart"in e}}()),C}const E={on(e,t,n){const s=this;if(!s.eventsListeners||s.destroyed)return s;if("function"!=typeof t)return s;const i=n?"unshift":"push";return e.split(" ").forEach((e=>{s.eventsListeners[e]||(s.eventsListeners[e]=[]),s.eventsListeners[e][i](t)})),s},once(e,t,n){const s=this;if(!s.eventsListeners||s.destroyed)return s;if("function"!=typeof t)return s;function i(...n){s.off(e,i),i.__emitterProxy&&delete i.__emitterProxy,t.apply(s,n)}return i.__emitterProxy=t,s.on(e,i,n)},onAny(e,t){const n=this;if(!n.eventsListeners||n.destroyed)return n;if("function"!=typeof e)return n;const s=t?"unshift":"push";return n.eventsAnyListeners.indexOf(e)<0&&n.eventsAnyListeners[s](e),n},offAny(e){const t=this;if(!t.eventsListeners||t.destroyed)return t;if(!t.eventsAnyListeners)return t;const n=t.eventsAnyListeners.indexOf(e);return n>=0&&t.eventsAnyListeners.splice(n,1),t},off(e,t){const n=this;return!n.eventsListeners||n.destroyed?n:n.eventsListeners?(e.split(" ").forEach((e=>{void 0===t?n.eventsListeners[e]=[]:n.eventsListeners[e]&&n.eventsListeners[e].forEach(((s,i)=>{(s===t||s.__emitterProxy&&s.__emitterProxy===t)&&n.eventsListeners[e].splice(i,1)}))})),n):n},emit(...e){const t=this;if(!t.eventsListeners||t.destroyed)return t;if(!t.eventsListeners)return t;let n,s,i;return"string"==typeof e[0]||Array.isArray(e[0])?(n=e[0],s=e.slice(1,e.length),i=t):(n=e[0].events,s=e[0].data,i=e[0].context||t),s.unshift(i),(Array.isArray(n)?n:n.split(" ")).forEach((e=>{t.eventsAnyListeners&&t.eventsAnyListeners.length&&t.eventsAnyListeners.forEach((t=>{t.apply(i,[e,...s])})),t.eventsListeners&&t.eventsListeners[e]&&t.eventsListeners[e].forEach((e=>{e.apply(i,s)}))})),t}},M={updateSize:function(){const e=this;let t,n;const s=e.$el;t=void 0!==e.params.width&&null!==e.params.width?e.params.width:s[0].clientWidth,n=void 0!==e.params.height&&null!==e.params.height?e.params.height:s[0].clientHeight,0===t&&e.isHorizontal()||0===n&&e.isVertical()||(t=t-parseInt(s.css("padding-left")||0,10)-parseInt(s.css("padding-right")||0,10),n=n-parseInt(s.css("padding-top")||0,10)-parseInt(s.css("padding-bottom")||0,10),Number.isNaN(t)&&(t=0),Number.isNaN(n)&&(n=0),Object.assign(e,{width:t,height:n,size:e.isHorizontal()?t:n}))},updateSlides:function(){const e=this;function t(t){return e.isHorizontal()?t:{width:"height","margin-top":"margin-left","margin-bottom ":"margin-right","margin-left":"margin-top","margin-right":"margin-bottom","padding-left":"padding-top","padding-right":"padding-bottom",marginRight:"marginBottom"}[t]}function n(e,n){return parseFloat(e.getPropertyValue(t(n))||0)}const s=e.params,{$wrapperEl:i,size:a,rtlTranslate:r,wrongRTL:o}=e,l=e.virtual&&s.virtual.enabled,d=l?e.virtual.slides.length:e.slides.length,c=i.children(`.${e.params.slideClass}`),p=l?e.virtual.slides.length:c.length;let u=[];const h=[],m=[];let f=s.slidesOffsetBefore;"function"==typeof f&&(f=s.slidesOffsetBefore.call(e));let g=s.slidesOffsetAfter;"function"==typeof g&&(g=s.slidesOffsetAfter.call(e));const v=e.snapGrid.length,y=e.slidesGrid.length;let w=s.spaceBetween,T=-f,C=0,S=0;if(void 0===a)return;"string"==typeof w&&w.indexOf("%")>=0&&(w=parseFloat(w.replace("%",""))/100*a),e.virtualSize=-w,r?c.css({marginLeft:"",marginBottom:"",marginTop:""}):c.css({marginRight:"",marginBottom:"",marginTop:""}),s.centeredSlides&&s.cssMode&&(b(e.wrapperEl,"--swiper-centered-offset-before",""),b(e.wrapperEl,"--swiper-centered-offset-after",""));const k=s.grid&&s.grid.rows>1&&e.grid;let x;k&&e.grid.initSlides(p);const E="auto"===s.slidesPerView&&s.breakpoints&&Object.keys(s.breakpoints).filter((e=>void 0!==s.breakpoints[e].slidesPerView)).length>0;for(let i=0;i<p;i+=1){x=0;const r=c.eq(i);if(k&&e.grid.updateSlide(i,r,p,t),"none"!==r.css("display")){if("auto"===s.slidesPerView){E&&(c[i].style[t("width")]="");const a=getComputedStyle(r[0]),o=r[0].style.transform,l=r[0].style.webkitTransform;if(o&&(r[0].style.transform="none"),l&&(r[0].style.webkitTransform="none"),s.roundLengths)x=e.isHorizontal()?r.outerWidth(!0):r.outerHeight(!0);else{const e=n(a,"width"),t=n(a,"padding-left"),s=n(a,"padding-right"),i=n(a,"margin-left"),o=n(a,"margin-right"),l=a.getPropertyValue("box-sizing");if(l&&"border-box"===l)x=e+i+o;else{const{clientWidth:n,offsetWidth:a}=r[0];x=e+t+s+i+o+(a-n)}}o&&(r[0].style.transform=o),l&&(r[0].style.webkitTransform=l),s.roundLengths&&(x=Math.floor(x))}else x=(a-(s.slidesPerView-1)*w)/s.slidesPerView,s.roundLengths&&(x=Math.floor(x)),c[i]&&(c[i].style[t("width")]=`${x}px`);c[i]&&(c[i].swiperSlideSize=x),m.push(x),s.centeredSlides?(T=T+x/2+C/2+w,0===C&&0!==i&&(T=T-a/2-w),0===i&&(T=T-a/2-w),Math.abs(T)<.001&&(T=0),s.roundLengths&&(T=Math.floor(T)),S%s.slidesPerGroup==0&&u.push(T),h.push(T)):(s.roundLengths&&(T=Math.floor(T)),(S-Math.min(e.params.slidesPerGroupSkip,S))%e.params.slidesPerGroup==0&&u.push(T),h.push(T),T=T+x+w),e.virtualSize+=x+w,C=x,S+=1}}if(e.virtualSize=Math.max(e.virtualSize,a)+g,r&&o&&("slide"===s.effect||"coverflow"===s.effect)&&i.css({width:`${e.virtualSize+s.spaceBetween}px`}),s.setWrapperSize&&i.css({[t("width")]:`${e.virtualSize+s.spaceBetween}px`}),k&&e.grid.updateWrapperSize(x,u,t),!s.centeredSlides){const t=[];for(let n=0;n<u.length;n+=1){let i=u[n];s.roundLengths&&(i=Math.floor(i)),u[n]<=e.virtualSize-a&&t.push(i)}u=t,Math.floor(e.virtualSize-a)-Math.floor(u[u.length-1])>1&&u.push(e.virtualSize-a)}if(0===u.length&&(u=[0]),0!==s.spaceBetween){const n=e.isHorizontal()&&r?"marginLeft":t("marginRight");c.filter(((e,t)=>!s.cssMode||t!==c.length-1)).css({[n]:`${w}px`})}if(s.centeredSlides&&s.centeredSlidesBounds){let e=0;m.forEach((t=>{e+=t+(s.spaceBetween?s.spaceBetween:0)})),e-=s.spaceBetween;const t=e-a;u=u.map((e=>e<0?-f:e>t?t+g:e))}if(s.centerInsufficientSlides){let e=0;if(m.forEach((t=>{e+=t+(s.spaceBetween?s.spaceBetween:0)})),e-=s.spaceBetween,e<a){const t=(a-e)/2;u.forEach(((e,n)=>{u[n]=e-t})),h.forEach(((e,n)=>{h[n]=e+t}))}}if(Object.assign(e,{slides:c,snapGrid:u,slidesGrid:h,slidesSizesGrid:m}),s.centeredSlides&&s.cssMode&&!s.centeredSlidesBounds){b(e.wrapperEl,"--swiper-centered-offset-before",-u[0]+"px"),b(e.wrapperEl,"--swiper-centered-offset-after",e.size/2-m[m.length-1]/2+"px");const t=-e.snapGrid[0],n=-e.slidesGrid[0];e.snapGrid=e.snapGrid.map((e=>e+t)),e.slidesGrid=e.slidesGrid.map((e=>e+n))}if(p!==d&&e.emit("slidesLengthChange"),u.length!==v&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),h.length!==y&&e.emit("slidesGridLengthChange"),s.watchSlidesProgress&&e.updateSlidesOffset(),!(l||s.cssMode||"slide"!==s.effect&&"fade"!==s.effect)){const t=`${s.containerModifierClass}backface-hidden`,n=e.$el.hasClass(t);p<=s.maxBackfaceHiddenSlides?n||e.$el.addClass(t):n&&e.$el.removeClass(t)}},updateAutoHeight:function(e){const t=this,n=[],s=t.virtual&&t.params.virtual.enabled;let i,a=0;"number"==typeof e?t.setTransition(e):!0===e&&t.setTransition(t.params.speed);const r=e=>s?t.slides.filter((t=>parseInt(t.getAttribute("data-swiper-slide-index"),10)===e))[0]:t.slides.eq(e)[0];if("auto"!==t.params.slidesPerView&&t.params.slidesPerView>1)if(t.params.centeredSlides)(t.visibleSlides||f([])).each((e=>{n.push(e)}));else for(i=0;i<Math.ceil(t.params.slidesPerView);i+=1){const e=t.activeIndex+i;if(e>t.slides.length&&!s)break;n.push(r(e))}else n.push(r(t.activeIndex));for(i=0;i<n.length;i+=1)if(void 0!==n[i]){const e=n[i].offsetHeight;a=e>a?e:a}(a||0===a)&&t.$wrapperEl.css("height",`${a}px`)},updateSlidesOffset:function(){const e=this,t=e.slides;for(let n=0;n<t.length;n+=1)t[n].swiperSlideOffset=e.isHorizontal()?t[n].offsetLeft:t[n].offsetTop},updateSlidesProgress:function(e=this&&this.translate||0){const t=this,n=t.params,{slides:s,rtlTranslate:i,snapGrid:a}=t;if(0===s.length)return;void 0===s[0].swiperSlideOffset&&t.updateSlidesOffset();let r=-e;i&&(r=e),s.removeClass(n.slideVisibleClass),t.visibleSlidesIndexes=[],t.visibleSlides=[];for(let e=0;e<s.length;e+=1){const o=s[e];let l=o.swiperSlideOffset;n.cssMode&&n.centeredSlides&&(l-=s[0].swiperSlideOffset);const d=(r+(n.centeredSlides?t.minTranslate():0)-l)/(o.swiperSlideSize+n.spaceBetween),c=(r-a[0]+(n.centeredSlides?t.minTranslate():0)-l)/(o.swiperSlideSize+n.spaceBetween),p=-(r-l),u=p+t.slidesSizesGrid[e];(p>=0&&p<t.size-1||u>1&&u<=t.size||p<=0&&u>=t.size)&&(t.visibleSlides.push(o),t.visibleSlidesIndexes.push(e),s.eq(e).addClass(n.slideVisibleClass)),o.progress=i?-d:d,o.originalProgress=i?-c:c}t.visibleSlides=f(t.visibleSlides)},updateProgress:function(e){const t=this;if(void 0===e){const n=t.rtlTranslate?-1:1;e=t&&t.translate&&t.translate*n||0}const n=t.params,s=t.maxTranslate()-t.minTranslate();let{progress:i,isBeginning:a,isEnd:r}=t;const o=a,l=r;0===s?(i=0,a=!0,r=!0):(i=(e-t.minTranslate())/s,a=i<=0,r=i>=1),Object.assign(t,{progress:i,isBeginning:a,isEnd:r}),(n.watchSlidesProgress||n.centeredSlides&&n.autoHeight)&&t.updateSlidesProgress(e),a&&!o&&t.emit("reachBeginning toEdge"),r&&!l&&t.emit("reachEnd toEdge"),(o&&!a||l&&!r)&&t.emit("fromEdge"),t.emit("progress",i)},updateSlidesClasses:function(){const e=this,{slides:t,params:n,$wrapperEl:s,activeIndex:i,realIndex:a}=e,r=e.virtual&&n.virtual.enabled;let o;t.removeClass(`${n.slideActiveClass} ${n.slideNextClass} ${n.slidePrevClass} ${n.slideDuplicateActiveClass} ${n.slideDuplicateNextClass} ${n.slideDuplicatePrevClass}`),o=r?e.$wrapperEl.find(`.${n.slideClass}[data-swiper-slide-index="${i}"]`):t.eq(i),o.addClass(n.slideActiveClass),n.loop&&(o.hasClass(n.slideDuplicateClass)?s.children(`.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${a}"]`).addClass(n.slideDuplicateActiveClass):s.children(`.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${a}"]`).addClass(n.slideDuplicateActiveClass));let l=o.nextAll(`.${n.slideClass}`).eq(0).addClass(n.slideNextClass);n.loop&&0===l.length&&(l=t.eq(0),l.addClass(n.slideNextClass));let d=o.prevAll(`.${n.slideClass}`).eq(0).addClass(n.slidePrevClass);n.loop&&0===d.length&&(d=t.eq(-1),d.addClass(n.slidePrevClass)),n.loop&&(l.hasClass(n.slideDuplicateClass)?s.children(`.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${l.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicateNextClass):s.children(`.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${l.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicateNextClass),d.hasClass(n.slideDuplicateClass)?s.children(`.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${d.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicatePrevClass):s.children(`.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${d.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicatePrevClass)),e.emitSlidesClasses()},updateActiveIndex:function(e){const t=this,n=t.rtlTranslate?t.translate:-t.translate,{slidesGrid:s,snapGrid:i,params:a,activeIndex:r,realIndex:o,snapIndex:l}=t;let d,c=e;if(void 0===c){for(let e=0;e<s.length;e+=1)void 0!==s[e+1]?n>=s[e]&&n<s[e+1]-(s[e+1]-s[e])/2?c=e:n>=s[e]&&n<s[e+1]&&(c=e+1):n>=s[e]&&(c=e);a.normalizeSlideIndex&&(c<0||void 0===c)&&(c=0)}if(i.indexOf(n)>=0)d=i.indexOf(n);else{const e=Math.min(a.slidesPerGroupSkip,c);d=e+Math.floor((c-e)/a.slidesPerGroup)}if(d>=i.length&&(d=i.length-1),c===r)return void(d!==l&&(t.snapIndex=d,t.emit("snapIndexChange")));const p=parseInt(t.slides.eq(c).attr("data-swiper-slide-index")||c,10);Object.assign(t,{snapIndex:d,realIndex:p,previousIndex:r,activeIndex:c}),t.emit("activeIndexChange"),t.emit("snapIndexChange"),o!==p&&t.emit("realIndexChange"),(t.initialized||t.params.runCallbacksOnInit)&&t.emit("slideChange")},updateClickedSlide:function(e){const t=this,n=t.params,s=f(e).closest(`.${n.slideClass}`)[0];let i,a=!1;if(s)for(let e=0;e<t.slides.length;e+=1)if(t.slides[e]===s){a=!0,i=e;break}if(!s||!a)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=s,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(f(s).attr("data-swiper-slide-index"),10):t.clickedIndex=i,n.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},I={getTranslate:function(e=(this.isHorizontal()?"x":"y")){const{params:t,rtlTranslate:n,translate:s,$wrapperEl:i}=this;if(t.virtualTranslate)return n?-s:s;if(t.cssMode)return s;let a=function(e,t="x"){const n=o();let s,i,a;const r=function(e){const t=o();let n;return t.getComputedStyle&&(n=t.getComputedStyle(e,null)),!n&&e.currentStyle&&(n=e.currentStyle),n||(n=e.style),n}(e);return n.WebKitCSSMatrix?(i=r.transform||r.webkitTransform,i.split(",").length>6&&(i=i.split(", ").map((e=>e.replace(",","."))).join(", ")),a=new n.WebKitCSSMatrix("none"===i?"":i)):(a=r.MozTransform||r.OTransform||r.MsTransform||r.msTransform||r.transform||r.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),s=a.toString().split(",")),"x"===t&&(i=n.WebKitCSSMatrix?a.m41:16===s.length?parseFloat(s[12]):parseFloat(s[4])),"y"===t&&(i=n.WebKitCSSMatrix?a.m42:16===s.length?parseFloat(s[13]):parseFloat(s[5])),i||0}(i[0],e);return n&&(a=-a),a||0},setTranslate:function(e,t){const n=this,{rtlTranslate:s,params:i,$wrapperEl:a,wrapperEl:r,progress:o}=n;let l,d=0,c=0;n.isHorizontal()?d=s?-e:e:c=e,i.roundLengths&&(d=Math.floor(d),c=Math.floor(c)),i.cssMode?r[n.isHorizontal()?"scrollLeft":"scrollTop"]=n.isHorizontal()?-d:-c:i.virtualTranslate||a.transform(`translate3d(${d}px, ${c}px, 0px)`),n.previousTranslate=n.translate,n.translate=n.isHorizontal()?d:c;const p=n.maxTranslate()-n.minTranslate();l=0===p?0:(e-n.minTranslate())/p,l!==o&&n.updateProgress(e),n.emit("setTranslate",n.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e=0,t=this.params.speed,n=!0,s=!0,i){const a=this,{params:r,wrapperEl:o}=a;if(a.animating&&r.preventInteractionOnTransition)return!1;const l=a.minTranslate(),d=a.maxTranslate();let c;if(c=s&&e>l?l:s&&e<d?d:e,a.updateProgress(c),r.cssMode){const e=a.isHorizontal();if(0===t)o[e?"scrollLeft":"scrollTop"]=-c;else{if(!a.support.smoothScroll)return T({swiper:a,targetPosition:-c,side:e?"left":"top"}),!0;o.scrollTo({[e?"left":"top"]:-c,behavior:"smooth"})}return!0}return 0===t?(a.setTransition(0),a.setTranslate(c),n&&(a.emit("beforeTransitionStart",t,i),a.emit("transitionEnd"))):(a.setTransition(t),a.setTranslate(c),n&&(a.emit("beforeTransitionStart",t,i),a.emit("transitionStart")),a.animating||(a.animating=!0,a.onTranslateToWrapperTransitionEnd||(a.onTranslateToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onTranslateToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onTranslateToWrapperTransitionEnd),a.onTranslateToWrapperTransitionEnd=null,delete a.onTranslateToWrapperTransitionEnd,n&&a.emit("transitionEnd"))}),a.$wrapperEl[0].addEventListener("transitionend",a.onTranslateToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onTranslateToWrapperTransitionEnd))),!0}};function $({swiper:e,runCallbacks:t,direction:n,step:s}){const{activeIndex:i,previousIndex:a}=e;let r=n;if(r||(r=i>a?"next":i<a?"prev":"reset"),e.emit(`transition${s}`),t&&i!==a){if("reset"===r)return void e.emit(`slideResetTransition${s}`);e.emit(`slideChangeTransition${s}`),"next"===r?e.emit(`slideNextTransition${s}`):e.emit(`slidePrevTransition${s}`)}}const P={setTransition:function(e,t){const n=this;n.params.cssMode||n.$wrapperEl.transition(e),n.emit("setTransition",e,t)},transitionStart:function(e=!0,t){const n=this,{params:s}=n;s.cssMode||(s.autoHeight&&n.updateAutoHeight(),$({swiper:n,runCallbacks:e,direction:t,step:"Start"}))},transitionEnd:function(e=!0,t){const n=this,{params:s}=n;n.animating=!1,s.cssMode||(n.setTransition(0),$({swiper:n,runCallbacks:e,direction:t,step:"End"}))}},L={slideTo:function(e=0,t=this.params.speed,n=!0,s,i){if("number"!=typeof e&&"string"!=typeof e)throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof e}] given.`);if("string"==typeof e){const t=parseInt(e,10);if(!isFinite(t))throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`);e=t}const a=this;let r=e;r<0&&(r=0);const{params:o,snapGrid:l,slidesGrid:d,previousIndex:c,activeIndex:p,rtlTranslate:u,wrapperEl:h,enabled:m}=a;if(a.animating&&o.preventInteractionOnTransition||!m&&!s&&!i)return!1;const f=Math.min(a.params.slidesPerGroupSkip,r);let g=f+Math.floor((r-f)/a.params.slidesPerGroup);g>=l.length&&(g=l.length-1);const v=-l[g];if(o.normalizeSlideIndex)for(let e=0;e<d.length;e+=1){const t=-Math.floor(100*v),n=Math.floor(100*d[e]),s=Math.floor(100*d[e+1]);void 0!==d[e+1]?t>=n&&t<s-(s-n)/2?r=e:t>=n&&t<s&&(r=e+1):t>=n&&(r=e)}if(a.initialized&&r!==p){if(!a.allowSlideNext&&v<a.translate&&v<a.minTranslate())return!1;if(!a.allowSlidePrev&&v>a.translate&&v>a.maxTranslate()&&(p||0)!==r)return!1}let y;if(r!==(c||0)&&n&&a.emit("beforeSlideChangeStart"),a.updateProgress(v),y=r>p?"next":r<p?"prev":"reset",u&&-v===a.translate||!u&&v===a.translate)return a.updateActiveIndex(r),o.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==o.effect&&a.setTranslate(v),"reset"!==y&&(a.transitionStart(n,y),a.transitionEnd(n,y)),!1;if(o.cssMode){const e=a.isHorizontal(),n=u?v:-v;if(0===t){const t=a.virtual&&a.params.virtual.enabled;t&&(a.wrapperEl.style.scrollSnapType="none",a._immediateVirtual=!0),h[e?"scrollLeft":"scrollTop"]=n,t&&requestAnimationFrame((()=>{a.wrapperEl.style.scrollSnapType="",a._swiperImmediateVirtual=!1}))}else{if(!a.support.smoothScroll)return T({swiper:a,targetPosition:n,side:e?"left":"top"}),!0;h.scrollTo({[e?"left":"top"]:n,behavior:"smooth"})}return!0}return a.setTransition(t),a.setTranslate(v),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(n,y),0===t?a.transitionEnd(n,y):a.animating||(a.animating=!0,a.onSlideToWrapperTransitionEnd||(a.onSlideToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd),a.onSlideToWrapperTransitionEnd=null,delete a.onSlideToWrapperTransitionEnd,a.transitionEnd(n,y))}),a.$wrapperEl[0].addEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd)),!0},slideToLoop:function(e=0,t=this.params.speed,n=!0,s){if("string"==typeof e){const t=parseInt(e,10);if(!isFinite(t))throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`);e=t}const i=this;let a=e;return i.params.loop&&(a+=i.loopedSlides),i.slideTo(a,t,n,s)},slideNext:function(e=this.params.speed,t=!0,n){const s=this,{animating:i,enabled:a,params:r}=s;if(!a)return s;let o=r.slidesPerGroup;"auto"===r.slidesPerView&&1===r.slidesPerGroup&&r.slidesPerGroupAuto&&(o=Math.max(s.slidesPerViewDynamic("current",!0),1));const l=s.activeIndex<r.slidesPerGroupSkip?1:o;if(r.loop){if(i&&r.loopPreventsSlide)return!1;s.loopFix(),s._clientLeft=s.$wrapperEl[0].clientLeft}return r.rewind&&s.isEnd?s.slideTo(0,e,t,n):s.slideTo(s.activeIndex+l,e,t,n)},slidePrev:function(e=this.params.speed,t=!0,n){const s=this,{params:i,animating:a,snapGrid:r,slidesGrid:o,rtlTranslate:l,enabled:d}=s;if(!d)return s;if(i.loop){if(a&&i.loopPreventsSlide)return!1;s.loopFix(),s._clientLeft=s.$wrapperEl[0].clientLeft}function c(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}const p=c(l?s.translate:-s.translate),u=r.map((e=>c(e)));let h=r[u.indexOf(p)-1];if(void 0===h&&i.cssMode){let e;r.forEach(((t,n)=>{p>=t&&(e=n)})),void 0!==e&&(h=r[e>0?e-1:e])}let m=0;if(void 0!==h&&(m=o.indexOf(h),m<0&&(m=s.activeIndex-1),"auto"===i.slidesPerView&&1===i.slidesPerGroup&&i.slidesPerGroupAuto&&(m=m-s.slidesPerViewDynamic("previous",!0)+1,m=Math.max(m,0))),i.rewind&&s.isBeginning){const i=s.params.virtual&&s.params.virtual.enabled&&s.virtual?s.virtual.slides.length-1:s.slides.length-1;return s.slideTo(i,e,t,n)}return s.slideTo(m,e,t,n)},slideReset:function(e=this.params.speed,t=!0,n){return this.slideTo(this.activeIndex,e,t,n)},slideToClosest:function(e=this.params.speed,t=!0,n,s=.5){const i=this;let a=i.activeIndex;const r=Math.min(i.params.slidesPerGroupSkip,a),o=r+Math.floor((a-r)/i.params.slidesPerGroup),l=i.rtlTranslate?i.translate:-i.translate;if(l>=i.snapGrid[o]){const e=i.snapGrid[o];l-e>(i.snapGrid[o+1]-e)*s&&(a+=i.params.slidesPerGroup)}else{const e=i.snapGrid[o-1];l-e<=(i.snapGrid[o]-e)*s&&(a-=i.params.slidesPerGroup)}return a=Math.max(a,0),a=Math.min(a,i.slidesGrid.length-1),i.slideTo(a,e,t,n)},slideToClickedSlide:function(){const e=this,{params:t,$wrapperEl:n}=e,s="auto"===t.slidesPerView?e.slidesPerViewDynamic():t.slidesPerView;let i,a=e.clickedIndex;if(t.loop){if(e.animating)return;i=parseInt(f(e.clickedSlide).attr("data-swiper-slide-index"),10),t.centeredSlides?a<e.loopedSlides-s/2||a>e.slides.length-e.loopedSlides+s/2?(e.loopFix(),a=n.children(`.${t.slideClass}[data-swiper-slide-index="${i}"]:not(.${t.slideDuplicateClass})`).eq(0).index(),g((()=>{e.slideTo(a)}))):e.slideTo(a):a>e.slides.length-s?(e.loopFix(),a=n.children(`.${t.slideClass}[data-swiper-slide-index="${i}"]:not(.${t.slideDuplicateClass})`).eq(0).index(),g((()=>{e.slideTo(a)}))):e.slideTo(a)}else e.slideTo(a)}},O={loopCreate:function(){const e=this,t=a(),{params:n,$wrapperEl:s}=e,i=s.children().length>0?f(s.children()[0].parentNode):s;i.children(`.${n.slideClass}.${n.slideDuplicateClass}`).remove();let r=i.children(`.${n.slideClass}`);if(n.loopFillGroupWithBlank){const e=n.slidesPerGroup-r.length%n.slidesPerGroup;if(e!==n.slidesPerGroup){for(let s=0;s<e;s+=1){const e=f(t.createElement("div")).addClass(`${n.slideClass} ${n.slideBlankClass}`);i.append(e)}r=i.children(`.${n.slideClass}`)}}"auto"!==n.slidesPerView||n.loopedSlides||(n.loopedSlides=r.length),e.loopedSlides=Math.ceil(parseFloat(n.loopedSlides||n.slidesPerView,10)),e.loopedSlides+=n.loopAdditionalSlides,e.loopedSlides>r.length&&e.params.loopedSlidesLimit&&(e.loopedSlides=r.length);const o=[],l=[];r.each(((e,t)=>{f(e).attr("data-swiper-slide-index",t)}));for(let t=0;t<e.loopedSlides;t+=1){const e=t-Math.floor(t/r.length)*r.length;l.push(r.eq(e)[0]),o.unshift(r.eq(r.length-e-1)[0])}for(let e=0;e<l.length;e+=1)i.append(f(l[e].cloneNode(!0)).addClass(n.slideDuplicateClass));for(let e=o.length-1;e>=0;e-=1)i.prepend(f(o[e].cloneNode(!0)).addClass(n.slideDuplicateClass))},loopFix:function(){const e=this;e.emit("beforeLoopFix");const{activeIndex:t,slides:n,loopedSlides:s,allowSlidePrev:i,allowSlideNext:a,snapGrid:r,rtlTranslate:o}=e;let l;e.allowSlidePrev=!0,e.allowSlideNext=!0;const d=-r[t]-e.getTranslate();t<s?(l=n.length-3*s+t,l+=s,e.slideTo(l,0,!1,!0)&&0!==d&&e.setTranslate((o?-e.translate:e.translate)-d)):t>=n.length-s&&(l=-n.length+t+s,l+=s,e.slideTo(l,0,!1,!0)&&0!==d&&e.setTranslate((o?-e.translate:e.translate)-d)),e.allowSlidePrev=i,e.allowSlideNext=a,e.emit("loopFix")},loopDestroy:function(){const{$wrapperEl:e,params:t,slides:n}=this;e.children(`.${t.slideClass}.${t.slideDuplicateClass},.${t.slideClass}.${t.slideBlankClass}`).remove(),n.removeAttr("data-swiper-slide-index")}};function A(e){const t=this,n=a(),s=o(),i=t.touchEventsData,{params:r,touches:l,enabled:d}=t;if(!d)return;if(t.animating&&r.preventInteractionOnTransition)return;!t.animating&&r.cssMode&&r.loop&&t.loopFix();let c=e;c.originalEvent&&(c=c.originalEvent);let p=f(c.target);if("wrapper"===r.touchEventsTarget&&!p.closest(t.wrapperEl).length)return;if(i.isTouchEvent="touchstart"===c.type,!i.isTouchEvent&&"which"in c&&3===c.which)return;if(!i.isTouchEvent&&"button"in c&&c.button>0)return;if(i.isTouched&&i.isMoved)return;const u=!!r.noSwipingClass&&""!==r.noSwipingClass,h=e.composedPath?e.composedPath():e.path;u&&c.target&&c.target.shadowRoot&&h&&(p=f(h[0]));const m=r.noSwipingSelector?r.noSwipingSelector:`.${r.noSwipingClass}`,g=!(!c.target||!c.target.shadowRoot);if(r.noSwiping&&(g?function(e,t=this){return function t(n){if(!n||n===a()||n===o())return null;n.assignedSlot&&(n=n.assignedSlot);const s=n.closest(e);return s||n.getRootNode?s||t(n.getRootNode().host):null}(t)}(m,p[0]):p.closest(m)[0]))return void(t.allowClick=!0);if(r.swipeHandler&&!p.closest(r.swipeHandler)[0])return;l.currentX="touchstart"===c.type?c.targetTouches[0].pageX:c.pageX,l.currentY="touchstart"===c.type?c.targetTouches[0].pageY:c.pageY;const y=l.currentX,w=l.currentY,b=r.edgeSwipeDetection||r.iOSEdgeSwipeDetection,T=r.edgeSwipeThreshold||r.iOSEdgeSwipeThreshold;if(b&&(y<=T||y>=s.innerWidth-T)){if("prevent"!==b)return;e.preventDefault()}if(Object.assign(i,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),l.startX=y,l.startY=w,i.touchStartTime=v(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,r.threshold>0&&(i.allowThresholdMove=!1),"touchstart"!==c.type){let e=!0;p.is(i.focusableElements)&&(e=!1,"SELECT"===p[0].nodeName&&(i.isTouched=!1)),n.activeElement&&f(n.activeElement).is(i.focusableElements)&&n.activeElement!==p[0]&&n.activeElement.blur();const s=e&&t.allowTouchMove&&r.touchStartPreventDefault;!r.touchStartForcePreventDefault&&!s||p[0].isContentEditable||c.preventDefault()}t.params.freeMode&&t.params.freeMode.enabled&&t.freeMode&&t.animating&&!r.cssMode&&t.freeMode.onTouchStart(),t.emit("touchStart",c)}function z(e){const t=a(),n=this,s=n.touchEventsData,{params:i,touches:r,rtlTranslate:o,enabled:l}=n;if(!l)return;let d=e;if(d.originalEvent&&(d=d.originalEvent),!s.isTouched)return void(s.startMoving&&s.isScrolling&&n.emit("touchMoveOpposite",d));if(s.isTouchEvent&&"touchmove"!==d.type)return;const c="touchmove"===d.type&&d.targetTouches&&(d.targetTouches[0]||d.changedTouches[0]),p="touchmove"===d.type?c.pageX:d.pageX,u="touchmove"===d.type?c.pageY:d.pageY;if(d.preventedByNestedSwiper)return r.startX=p,void(r.startY=u);if(!n.allowTouchMove)return f(d.target).is(s.focusableElements)||(n.allowClick=!1),void(s.isTouched&&(Object.assign(r,{startX:p,startY:u,currentX:p,currentY:u}),s.touchStartTime=v()));if(s.isTouchEvent&&i.touchReleaseOnEdges&&!i.loop)if(n.isVertical()){if(u<r.startY&&n.translate<=n.maxTranslate()||u>r.startY&&n.translate>=n.minTranslate())return s.isTouched=!1,void(s.isMoved=!1)}else if(p<r.startX&&n.translate<=n.maxTranslate()||p>r.startX&&n.translate>=n.minTranslate())return;if(s.isTouchEvent&&t.activeElement&&d.target===t.activeElement&&f(d.target).is(s.focusableElements))return s.isMoved=!0,void(n.allowClick=!1);if(s.allowTouchCallbacks&&n.emit("touchMove",d),d.targetTouches&&d.targetTouches.length>1)return;r.currentX=p,r.currentY=u;const h=r.currentX-r.startX,m=r.currentY-r.startY;if(n.params.threshold&&Math.sqrt(h**2+m**2)<n.params.threshold)return;if(void 0===s.isScrolling){let e;n.isHorizontal()&&r.currentY===r.startY||n.isVertical()&&r.currentX===r.startX?s.isScrolling=!1:h*h+m*m>=25&&(e=180*Math.atan2(Math.abs(m),Math.abs(h))/Math.PI,s.isScrolling=n.isHorizontal()?e>i.touchAngle:90-e>i.touchAngle)}if(s.isScrolling&&n.emit("touchMoveOpposite",d),void 0===s.startMoving&&(r.currentX===r.startX&&r.currentY===r.startY||(s.startMoving=!0)),s.isScrolling)return void(s.isTouched=!1);if(!s.startMoving)return;n.allowClick=!1,!i.cssMode&&d.cancelable&&d.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&d.stopPropagation(),s.isMoved||(i.loop&&!i.cssMode&&n.loopFix(),s.startTranslate=n.getTranslate(),n.setTransition(0),n.animating&&n.$wrapperEl.trigger("webkitTransitionEnd transitionend"),s.allowMomentumBounce=!1,!i.grabCursor||!0!==n.allowSlideNext&&!0!==n.allowSlidePrev||n.setGrabCursor(!0),n.emit("sliderFirstMove",d)),n.emit("sliderMove",d),s.isMoved=!0;let g=n.isHorizontal()?h:m;r.diff=g,g*=i.touchRatio,o&&(g=-g),n.swipeDirection=g>0?"prev":"next",s.currentTranslate=g+s.startTranslate;let y=!0,w=i.resistanceRatio;if(i.touchReleaseOnEdges&&(w=0),g>0&&s.currentTranslate>n.minTranslate()?(y=!1,i.resistance&&(s.currentTranslate=n.minTranslate()-1+(-n.minTranslate()+s.startTranslate+g)**w)):g<0&&s.currentTranslate<n.maxTranslate()&&(y=!1,i.resistance&&(s.currentTranslate=n.maxTranslate()+1-(n.maxTranslate()-s.startTranslate-g)**w)),y&&(d.preventedByNestedSwiper=!0),!n.allowSlideNext&&"next"===n.swipeDirection&&s.currentTranslate<s.startTranslate&&(s.currentTranslate=s.startTranslate),!n.allowSlidePrev&&"prev"===n.swipeDirection&&s.currentTranslate>s.startTranslate&&(s.currentTranslate=s.startTranslate),n.allowSlidePrev||n.allowSlideNext||(s.currentTranslate=s.startTranslate),i.threshold>0){if(!(Math.abs(g)>i.threshold||s.allowThresholdMove))return void(s.currentTranslate=s.startTranslate);if(!s.allowThresholdMove)return s.allowThresholdMove=!0,r.startX=r.currentX,r.startY=r.currentY,s.currentTranslate=s.startTranslate,void(r.diff=n.isHorizontal()?r.currentX-r.startX:r.currentY-r.startY)}i.followFinger&&!i.cssMode&&((i.freeMode&&i.freeMode.enabled&&n.freeMode||i.watchSlidesProgress)&&(n.updateActiveIndex(),n.updateSlidesClasses()),n.params.freeMode&&i.freeMode.enabled&&n.freeMode&&n.freeMode.onTouchMove(),n.updateProgress(s.currentTranslate),n.setTranslate(s.currentTranslate))}function G(e){const t=this,n=t.touchEventsData,{params:s,touches:i,rtlTranslate:a,slidesGrid:r,enabled:o}=t;if(!o)return;let l=e;if(l.originalEvent&&(l=l.originalEvent),n.allowTouchCallbacks&&t.emit("touchEnd",l),n.allowTouchCallbacks=!1,!n.isTouched)return n.isMoved&&s.grabCursor&&t.setGrabCursor(!1),n.isMoved=!1,void(n.startMoving=!1);s.grabCursor&&n.isMoved&&n.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);const d=v(),c=d-n.touchStartTime;if(t.allowClick){const e=l.path||l.composedPath&&l.composedPath();t.updateClickedSlide(e&&e[0]||l.target),t.emit("tap click",l),c<300&&d-n.lastClickTime<300&&t.emit("doubleTap doubleClick",l)}if(n.lastClickTime=v(),g((()=>{t.destroyed||(t.allowClick=!0)})),!n.isTouched||!n.isMoved||!t.swipeDirection||0===i.diff||n.currentTranslate===n.startTranslate)return n.isTouched=!1,n.isMoved=!1,void(n.startMoving=!1);let p;if(n.isTouched=!1,n.isMoved=!1,n.startMoving=!1,p=s.followFinger?a?t.translate:-t.translate:-n.currentTranslate,s.cssMode)return;if(t.params.freeMode&&s.freeMode.enabled)return void t.freeMode.onTouchEnd({currentPos:p});let u=0,h=t.slidesSizesGrid[0];for(let e=0;e<r.length;e+=e<s.slidesPerGroupSkip?1:s.slidesPerGroup){const t=e<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;void 0!==r[e+t]?p>=r[e]&&p<r[e+t]&&(u=e,h=r[e+t]-r[e]):p>=r[e]&&(u=e,h=r[r.length-1]-r[r.length-2])}let m=null,f=null;s.rewind&&(t.isBeginning?f=t.params.virtual&&t.params.virtual.enabled&&t.virtual?t.virtual.slides.length-1:t.slides.length-1:t.isEnd&&(m=0));const y=(p-r[u])/h,w=u<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;if(c>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(y>=s.longSwipesRatio?t.slideTo(s.rewind&&t.isEnd?m:u+w):t.slideTo(u)),"prev"===t.swipeDirection&&(y>1-s.longSwipesRatio?t.slideTo(u+w):null!==f&&y<0&&Math.abs(y)>s.longSwipesRatio?t.slideTo(f):t.slideTo(u))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);!t.navigation||l.target!==t.navigation.nextEl&&l.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo(null!==m?m:u+w),"prev"===t.swipeDirection&&t.slideTo(null!==f?f:u)):l.target===t.navigation.nextEl?t.slideTo(u+w):t.slideTo(u)}}function B(){const e=this,{params:t,el:n}=e;if(n&&0===n.offsetWidth)return;t.breakpoints&&e.setBreakpoint();const{allowSlideNext:s,allowSlidePrev:i,snapGrid:a}=e;e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),e.updateSlidesClasses(),("auto"===t.slidesPerView||t.slidesPerView>1)&&e.isEnd&&!e.isBeginning&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0),e.autoplay&&e.autoplay.running&&e.autoplay.paused&&e.autoplay.run(),e.allowSlidePrev=i,e.allowSlideNext=s,e.params.watchOverflow&&a!==e.snapGrid&&e.checkOverflow()}function D(e){const t=this;t.enabled&&(t.allowClick||(t.params.preventClicks&&e.preventDefault(),t.params.preventClicksPropagation&&t.animating&&(e.stopPropagation(),e.stopImmediatePropagation())))}function N(){const e=this,{wrapperEl:t,rtlTranslate:n,enabled:s}=e;if(!s)return;let i;e.previousTranslate=e.translate,e.isHorizontal()?e.translate=-t.scrollLeft:e.translate=-t.scrollTop,0===e.translate&&(e.translate=0),e.updateActiveIndex(),e.updateSlidesClasses();const a=e.maxTranslate()-e.minTranslate();i=0===a?0:(e.translate-e.minTranslate())/a,i!==e.progress&&e.updateProgress(n?-e.translate:e.translate),e.emit("setTranslate",e.translate,!1)}let _=!1;function H(){}const F=(e,t)=>{const n=a(),{params:s,touchEvents:i,el:r,wrapperEl:o,device:l,support:d}=e,c=!!s.nested,p="on"===t?"addEventListener":"removeEventListener",u=t;if(d.touch){const t=!("touchstart"!==i.start||!d.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1};r[p](i.start,e.onTouchStart,t),r[p](i.move,e.onTouchMove,d.passiveListener?{passive:!1,capture:c}:c),r[p](i.end,e.onTouchEnd,t),i.cancel&&r[p](i.cancel,e.onTouchEnd,t)}else r[p](i.start,e.onTouchStart,!1),n[p](i.move,e.onTouchMove,c),n[p](i.end,e.onTouchEnd,!1);(s.preventClicks||s.preventClicksPropagation)&&r[p]("click",e.onClick,!0),s.cssMode&&o[p]("scroll",e.onScroll),s.updateOnWindowResize?e[u](l.ios||l.android?"resize orientationchange observerUpdate":"resize observerUpdate",B,!0):e[u]("observerUpdate",B,!0)},R={attachEvents:function(){const e=this,t=a(),{params:n,support:s}=e;e.onTouchStart=A.bind(e),e.onTouchMove=z.bind(e),e.onTouchEnd=G.bind(e),n.cssMode&&(e.onScroll=N.bind(e)),e.onClick=D.bind(e),s.touch&&!_&&(t.addEventListener("touchstart",H),_=!0),F(e,"on")},detachEvents:function(){F(this,"off")}},q=(e,t)=>e.grid&&t.grid&&t.grid.rows>1,j={setBreakpoint:function(){const e=this,{activeIndex:t,initialized:n,loopedSlides:s=0,params:i,$el:a}=e,r=i.breakpoints;if(!r||r&&0===Object.keys(r).length)return;const o=e.getBreakpoint(r,e.params.breakpointsBase,e.el);if(!o||e.currentBreakpoint===o)return;const l=(o in r?r[o]:void 0)||e.originalParams,d=q(e,i),c=q(e,l),p=i.enabled;d&&!c?(a.removeClass(`${i.containerModifierClass}grid ${i.containerModifierClass}grid-column`),e.emitContainerClasses()):!d&&c&&(a.addClass(`${i.containerModifierClass}grid`),(l.grid.fill&&"column"===l.grid.fill||!l.grid.fill&&"column"===i.grid.fill)&&a.addClass(`${i.containerModifierClass}grid-column`),e.emitContainerClasses()),["navigation","pagination","scrollbar"].forEach((t=>{const n=i[t]&&i[t].enabled,s=l[t]&&l[t].enabled;n&&!s&&e[t].disable(),!n&&s&&e[t].enable()}));const u=l.direction&&l.direction!==i.direction,h=i.loop&&(l.slidesPerView!==i.slidesPerView||u);u&&n&&e.changeDirection(),w(e.params,l);const m=e.params.enabled;Object.assign(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),p&&!m?e.disable():!p&&m&&e.enable(),e.currentBreakpoint=o,e.emit("_beforeBreakpoint",l),h&&n&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-s+e.loopedSlides,0,!1)),e.emit("breakpoint",l)},getBreakpoint:function(e,t="window",n){if(!e||"container"===t&&!n)return;let s=!1;const i=o(),a="window"===t?i.innerHeight:n.clientHeight,r=Object.keys(e).map((e=>{if("string"==typeof e&&0===e.indexOf("@")){const t=parseFloat(e.substr(1));return{value:a*t,point:e}}return{value:e,point:e}}));r.sort(((e,t)=>parseInt(e.value,10)-parseInt(t.value,10)));for(let e=0;e<r.length;e+=1){const{point:a,value:o}=r[e];"window"===t?i.matchMedia(`(min-width: ${o}px)`).matches&&(s=a):o<=n.clientWidth&&(s=a)}return s||"max"}},V={addClasses:function(){const e=this,{classNames:t,params:n,rtl:s,$el:i,device:a,support:r}=e,o=function(e,t){const n=[];return e.forEach((e=>{"object"==typeof e?Object.keys(e).forEach((s=>{e[s]&&n.push(t+s)})):"string"==typeof e&&n.push(t+e)})),n}(["initialized",n.direction,{"pointer-events":!r.touch},{"free-mode":e.params.freeMode&&n.freeMode.enabled},{autoheight:n.autoHeight},{rtl:s},{grid:n.grid&&n.grid.rows>1},{"grid-column":n.grid&&n.grid.rows>1&&"column"===n.grid.fill},{android:a.android},{ios:a.ios},{"css-mode":n.cssMode},{centered:n.cssMode&&n.centeredSlides},{"watch-progress":n.watchSlidesProgress}],n.containerModifierClass);t.push(...o),i.addClass([...t].join(" ")),e.emitContainerClasses()},removeClasses:function(){const{$el:e,classNames:t}=this;e.removeClass(t.join(" ")),this.emitContainerClasses()}},W={loadImage:function(e,t,n,s,i,a){const r=o();let l;function d(){a&&a()}f(e).parent("picture")[0]||e.complete&&i?d():t?(l=new r.Image,l.onload=d,l.onerror=d,s&&(l.sizes=s),n&&(l.srcset=n),t&&(l.src=t)):d()},preloadImages:function(){const e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(let n=0;n<e.imagesToLoad.length;n+=1){const s=e.imagesToLoad[n];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}},Y={init:!0,direction:"horizontal",touchEventsTarget:"wrapper",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,resizeObserver:!0,nested:!1,createElements:!1,enabled:!0,focusableElements:"input, select, option, textarea, button, video, label",width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsBase:"window",spaceBetween:0,slidesPerView:1,slidesPerGroup:1,slidesPerGroupSkip:0,slidesPerGroupAuto:!1,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopedSlidesLimit:!0,loopFillGroupWithBlank:!1,loopPreventsSlide:!0,rewind:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,maxBackfaceHiddenSlides:10,containerModifierClass:"swiper-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0,_emitClasses:!1};function X(e,t){return function(n={}){const s=Object.keys(n)[0],i=n[s];"object"==typeof i&&null!==i?(["navigation","pagination","scrollbar"].indexOf(s)>=0&&!0===e[s]&&(e[s]={auto:!0}),s in e&&"enabled"in i?(!0===e[s]&&(e[s]={enabled:!0}),"object"!=typeof e[s]||"enabled"in e[s]||(e[s].enabled=!0),e[s]||(e[s]={enabled:!1}),w(t,n)):w(t,n)):w(t,n)}}const K={eventsEmitter:E,update:M,translate:I,transition:P,slide:L,loop:O,grabCursor:{setGrabCursor:function(e){const t=this;if(t.support.touch||!t.params.simulateTouch||t.params.watchOverflow&&t.isLocked||t.params.cssMode)return;const n="container"===t.params.touchEventsTarget?t.el:t.wrapperEl;n.style.cursor="move",n.style.cursor=e?"grabbing":"grab"},unsetGrabCursor:function(){const e=this;e.support.touch||e.params.watchOverflow&&e.isLocked||e.params.cssMode||(e["container"===e.params.touchEventsTarget?"el":"wrapperEl"].style.cursor="")}},events:R,breakpoints:j,checkOverflow:{checkOverflow:function(){const e=this,{isLocked:t,params:n}=e,{slidesOffsetBefore:s}=n;if(s){const t=e.slides.length-1,n=e.slidesGrid[t]+e.slidesSizesGrid[t]+2*s;e.isLocked=e.size>n}else e.isLocked=1===e.snapGrid.length;!0===n.allowSlideNext&&(e.allowSlideNext=!e.isLocked),!0===n.allowSlidePrev&&(e.allowSlidePrev=!e.isLocked),t&&t!==e.isLocked&&(e.isEnd=!1),t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock")}},classes:V,images:W},U={};class J{constructor(...e){let t,n;if(1===e.length&&e[0].constructor&&"Object"===Object.prototype.toString.call(e[0]).slice(8,-1)?n=e[0]:[t,n]=e,n||(n={}),n=w({},n),t&&!n.el&&(n.el=t),n.el&&f(n.el).length>1){const e=[];return f(n.el).each((t=>{const s=w({},n,{el:t});e.push(new J(s))})),e}const s=this;s.__swiper__=!0,s.support=x(),s.device=function(e={}){return S||(S=function({userAgent:e}={}){const t=x(),n=o(),s=n.navigator.platform,i=e||n.navigator.userAgent,a={ios:!1,android:!1},r=n.screen.width,l=n.screen.height,d=i.match(/(Android);?[\s\/]+([\d.]+)?/);let c=i.match(/(iPad).*OS\s([\d_]+)/);const p=i.match(/(iPod)(.*OS\s([\d_]+))?/),u=!c&&i.match(/(iPhone\sOS|iOS)\s([\d_]+)/),h="Win32"===s;let m="MacIntel"===s;return!c&&m&&t.touch&&["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(`${r}x${l}`)>=0&&(c=i.match(/(Version)\/([\d.]+)/),c||(c=[0,1,"13_0_0"]),m=!1),d&&!h&&(a.os="android",a.android=!0),(c||u||p)&&(a.os="ios",a.ios=!0),a}(e)),S}({userAgent:n.userAgent}),s.browser=(k||(k=function(){const e=o();return{isSafari:function(){const t=e.navigator.userAgent.toLowerCase();return t.indexOf("safari")>=0&&t.indexOf("chrome")<0&&t.indexOf("android")<0}(),isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent)}}()),k),s.eventsListeners={},s.eventsAnyListeners=[],s.modules=[...s.__modules__],n.modules&&Array.isArray(n.modules)&&s.modules.push(...n.modules);const i={};s.modules.forEach((e=>{e({swiper:s,extendParams:X(n,i),on:s.on.bind(s),once:s.once.bind(s),off:s.off.bind(s),emit:s.emit.bind(s)})}));const a=w({},Y,i);return s.params=w({},a,U,n),s.originalParams=w({},s.params),s.passedParams=w({},n),s.params&&s.params.on&&Object.keys(s.params.on).forEach((e=>{s.on(e,s.params.on[e])})),s.params&&s.params.onAny&&s.onAny(s.params.onAny),s.$=f,Object.assign(s,{enabled:s.params.enabled,el:t,classNames:[],slides:f(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:()=>"horizontal"===s.params.direction,isVertical:()=>"vertical"===s.params.direction,activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:s.params.allowSlideNext,allowSlidePrev:s.params.allowSlidePrev,touchEvents:function(){const e=["touchstart","touchmove","touchend","touchcancel"],t=["pointerdown","pointermove","pointerup"];return s.touchEventsTouch={start:e[0],move:e[1],end:e[2],cancel:e[3]},s.touchEventsDesktop={start:t[0],move:t[1],end:t[2]},s.support.touch||!s.params.simulateTouch?s.touchEventsTouch:s.touchEventsDesktop}(),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,focusableElements:s.params.focusableElements,lastClickTime:v(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:s.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),s.emit("_swiper"),s.params.init&&s.init(),s}enable(){const e=this;e.enabled||(e.enabled=!0,e.params.grabCursor&&e.setGrabCursor(),e.emit("enable"))}disable(){const e=this;e.enabled&&(e.enabled=!1,e.params.grabCursor&&e.unsetGrabCursor(),e.emit("disable"))}setProgress(e,t){const n=this;e=Math.min(Math.max(e,0),1);const s=n.minTranslate(),i=(n.maxTranslate()-s)*e+s;n.translateTo(i,void 0===t?0:t),n.updateActiveIndex(),n.updateSlidesClasses()}emitContainerClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const t=e.el.className.split(" ").filter((t=>0===t.indexOf("swiper")||0===t.indexOf(e.params.containerModifierClass)));e.emit("_containerClasses",t.join(" "))}getSlideClasses(e){const t=this;return t.destroyed?"":e.className.split(" ").filter((e=>0===e.indexOf("swiper-slide")||0===e.indexOf(t.params.slideClass))).join(" ")}emitSlidesClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const t=[];e.slides.each((n=>{const s=e.getSlideClasses(n);t.push({slideEl:n,classNames:s}),e.emit("_slideClass",n,s)})),e.emit("_slideClasses",t)}slidesPerViewDynamic(e="current",t=!1){const{params:n,slides:s,slidesGrid:i,slidesSizesGrid:a,size:r,activeIndex:o}=this;let l=1;if(n.centeredSlides){let e,t=s[o].swiperSlideSize;for(let n=o+1;n<s.length;n+=1)s[n]&&!e&&(t+=s[n].swiperSlideSize,l+=1,t>r&&(e=!0));for(let n=o-1;n>=0;n-=1)s[n]&&!e&&(t+=s[n].swiperSlideSize,l+=1,t>r&&(e=!0))}else if("current"===e)for(let e=o+1;e<s.length;e+=1)(t?i[e]+a[e]-i[o]<r:i[e]-i[o]<r)&&(l+=1);else for(let e=o-1;e>=0;e-=1)i[o]-i[e]<r&&(l+=1);return l}update(){const e=this;if(!e||e.destroyed)return;const{snapGrid:t,params:n}=e;function s(){const t=e.rtlTranslate?-1*e.translate:e.translate,n=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(n),e.updateActiveIndex(),e.updateSlidesClasses()}let i;n.breakpoints&&e.setBreakpoint(),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode&&e.params.freeMode.enabled?(s(),e.params.autoHeight&&e.updateAutoHeight()):(i=("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0),i||s()),n.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit("update")}changeDirection(e,t=!0){const n=this,s=n.params.direction;return e||(e="horizontal"===s?"vertical":"horizontal"),e===s||"horizontal"!==e&&"vertical"!==e||(n.$el.removeClass(`${n.params.containerModifierClass}${s}`).addClass(`${n.params.containerModifierClass}${e}`),n.emitContainerClasses(),n.params.direction=e,n.slides.each((t=>{"vertical"===e?t.style.width="":t.style.height=""})),n.emit("changeDirection"),t&&n.update()),n}changeLanguageDirection(e){const t=this;t.rtl&&"rtl"===e||!t.rtl&&"ltr"===e||(t.rtl="rtl"===e,t.rtlTranslate="horizontal"===t.params.direction&&t.rtl,t.rtl?(t.$el.addClass(`${t.params.containerModifierClass}rtl`),t.el.dir="rtl"):(t.$el.removeClass(`${t.params.containerModifierClass}rtl`),t.el.dir="ltr"),t.update())}mount(e){const t=this;if(t.mounted)return!0;const n=f(e||t.params.el);if(!(e=n[0]))return!1;e.swiper=t;const s=()=>`.${(t.params.wrapperClass||"").trim().split(" ").join(".")}`;let i=(()=>{if(e&&e.shadowRoot&&e.shadowRoot.querySelector){const t=f(e.shadowRoot.querySelector(s()));return t.children=e=>n.children(e),t}return n.children?n.children(s()):f(n).children(s())})();if(0===i.length&&t.params.createElements){const e=a().createElement("div");i=f(e),e.className=t.params.wrapperClass,n.append(e),n.children(`.${t.params.slideClass}`).each((e=>{i.append(e)}))}return Object.assign(t,{$el:n,el:e,$wrapperEl:i,wrapperEl:i[0],mounted:!0,rtl:"rtl"===e.dir.toLowerCase()||"rtl"===n.css("direction"),rtlTranslate:"horizontal"===t.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===n.css("direction")),wrongRTL:"-webkit-box"===i.css("display")}),!0}init(e){const t=this;return t.initialized||!1===t.mount(e)||(t.emit("beforeInit"),t.params.breakpoints&&t.setBreakpoint(),t.addClasses(),t.params.loop&&t.loopCreate(),t.updateSize(),t.updateSlides(),t.params.watchOverflow&&t.checkOverflow(),t.params.grabCursor&&t.enabled&&t.setGrabCursor(),t.params.preloadImages&&t.preloadImages(),t.params.loop?t.slideTo(t.params.initialSlide+t.loopedSlides,0,t.params.runCallbacksOnInit,!1,!0):t.slideTo(t.params.initialSlide,0,t.params.runCallbacksOnInit,!1,!0),t.attachEvents(),t.initialized=!0,t.emit("init"),t.emit("afterInit")),t}destroy(e=!0,t=!0){const n=this,{params:s,$el:i,$wrapperEl:a,slides:r}=n;return void 0===n.params||n.destroyed||(n.emit("beforeDestroy"),n.initialized=!1,n.detachEvents(),s.loop&&n.loopDestroy(),t&&(n.removeClasses(),i.removeAttr("style"),a.removeAttr("style"),r&&r.length&&r.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),n.emit("destroy"),Object.keys(n.eventsListeners).forEach((e=>{n.off(e)})),!1!==e&&(n.$el[0].swiper=null,function(e){const t=e;Object.keys(t).forEach((e=>{try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}}))}(n)),n.destroyed=!0),null}static extendDefaults(e){w(U,e)}static get extendedDefaults(){return U}static get defaults(){return Y}static installModule(e){J.prototype.__modules__||(J.prototype.__modules__=[]);const t=J.prototype.__modules__;"function"==typeof e&&t.indexOf(e)<0&&t.push(e)}static use(e){return Array.isArray(e)?(e.forEach((e=>J.installModule(e))),J):(J.installModule(e),J)}}Object.keys(K).forEach((e=>{Object.keys(K[e]).forEach((t=>{J.prototype[t]=K[e][t]}))})),J.use([function({swiper:e,on:t,emit:n}){const s=o();let i=null,a=null;const r=()=>{e&&!e.destroyed&&e.initialized&&(n("beforeResize"),n("resize"))},l=()=>{e&&!e.destroyed&&e.initialized&&n("orientationchange")};t("init",(()=>{e.params.resizeObserver&&void 0!==s.ResizeObserver?e&&!e.destroyed&&e.initialized&&(i=new ResizeObserver((t=>{a=s.requestAnimationFrame((()=>{const{width:n,height:s}=e;let i=n,a=s;t.forEach((({contentBoxSize:t,contentRect:n,target:s})=>{s&&s!==e.el||(i=n?n.width:(t[0]||t).inlineSize,a=n?n.height:(t[0]||t).blockSize)})),i===n&&a===s||r()}))})),i.observe(e.el)):(s.addEventListener("resize",r),s.addEventListener("orientationchange",l))})),t("destroy",(()=>{a&&s.cancelAnimationFrame(a),i&&i.unobserve&&e.el&&(i.unobserve(e.el),i=null),s.removeEventListener("resize",r),s.removeEventListener("orientationchange",l)}))},function({swiper:e,extendParams:t,on:n,emit:s}){const i=[],a=o(),r=(e,t={})=>{const n=new(a.MutationObserver||a.WebkitMutationObserver)((e=>{if(1===e.length)return void s("observerUpdate",e[0]);const t=function(){s("observerUpdate",e[0])};a.requestAnimationFrame?a.requestAnimationFrame(t):a.setTimeout(t,0)}));n.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.push(n)};t({observer:!1,observeParents:!1,observeSlideChildren:!1}),n("init",(()=>{if(e.params.observer){if(e.params.observeParents){const t=e.$el.parents();for(let e=0;e<t.length;e+=1)r(t[e])}r(e.$el[0],{childList:e.params.observeSlideChildren}),r(e.$wrapperEl[0],{attributes:!1})}})),n("destroy",(()=>{i.forEach((e=>{e.disconnect()})),i.splice(0,i.length)}))}]);const Q=J;function Z(e,t,n,s){const i=a();return e.params.createElements&&Object.keys(s).forEach((a=>{if(!n[a]&&!0===n.auto){let r=e.$el.children(`.${s[a]}`)[0];r||(r=i.createElement("div"),r.className=s[a],e.$el.append(r)),n[a]=r,t[a]=r}})),n}function ee({swiper:e,extendParams:t,on:n,emit:s}){function i(t){let n;return t&&(n=f(t),e.params.uniqueNavElements&&"string"==typeof t&&n.length>1&&1===e.$el.find(t).length&&(n=e.$el.find(t))),n}function a(t,n){const s=e.params.navigation;t&&t.length>0&&(t[n?"addClass":"removeClass"](s.disabledClass),t[0]&&"BUTTON"===t[0].tagName&&(t[0].disabled=n),e.params.watchOverflow&&e.enabled&&t[e.isLocked?"addClass":"removeClass"](s.lockClass))}function r(){if(e.params.loop)return;const{$nextEl:t,$prevEl:n}=e.navigation;a(n,e.isBeginning&&!e.params.rewind),a(t,e.isEnd&&!e.params.rewind)}function o(t){t.preventDefault(),(!e.isBeginning||e.params.loop||e.params.rewind)&&(e.slidePrev(),s("navigationPrev"))}function l(t){t.preventDefault(),(!e.isEnd||e.params.loop||e.params.rewind)&&(e.slideNext(),s("navigationNext"))}function d(){const t=e.params.navigation;if(e.params.navigation=Z(e,e.originalParams.navigation,e.params.navigation,{nextEl:"swiper-button-next",prevEl:"swiper-button-prev"}),!t.nextEl&&!t.prevEl)return;const n=i(t.nextEl),s=i(t.prevEl);n&&n.length>0&&n.on("click",l),s&&s.length>0&&s.on("click",o),Object.assign(e.navigation,{$nextEl:n,nextEl:n&&n[0],$prevEl:s,prevEl:s&&s[0]}),e.enabled||(n&&n.addClass(t.lockClass),s&&s.addClass(t.lockClass))}function c(){const{$nextEl:t,$prevEl:n}=e.navigation;t&&t.length&&(t.off("click",l),t.removeClass(e.params.navigation.disabledClass)),n&&n.length&&(n.off("click",o),n.removeClass(e.params.navigation.disabledClass))}t({navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock",navigationDisabledClass:"swiper-navigation-disabled"}}),e.navigation={nextEl:null,$nextEl:null,prevEl:null,$prevEl:null},n("init",(()=>{!1===e.params.navigation.enabled?p():(d(),r())})),n("toEdge fromEdge lock unlock",(()=>{r()})),n("destroy",(()=>{c()})),n("enable disable",(()=>{const{$nextEl:t,$prevEl:n}=e.navigation;t&&t[e.enabled?"removeClass":"addClass"](e.params.navigation.lockClass),n&&n[e.enabled?"removeClass":"addClass"](e.params.navigation.lockClass)})),n("click",((t,n)=>{const{$nextEl:i,$prevEl:a}=e.navigation,r=n.target;if(e.params.navigation.hideOnClick&&!f(r).is(a)&&!f(r).is(i)){if(e.pagination&&e.params.pagination&&e.params.pagination.clickable&&(e.pagination.el===r||e.pagination.el.contains(r)))return;let t;i?t=i.hasClass(e.params.navigation.hiddenClass):a&&(t=a.hasClass(e.params.navigation.hiddenClass)),s(!0===t?"navigationShow":"navigationHide"),i&&i.toggleClass(e.params.navigation.hiddenClass),a&&a.toggleClass(e.params.navigation.hiddenClass)}}));const p=()=>{e.$el.addClass(e.params.navigation.navigationDisabledClass),c()};Object.assign(e.navigation,{enable:()=>{e.$el.removeClass(e.params.navigation.navigationDisabledClass),d(),r()},disable:p,update:r,init:d,destroy:c})}function te(e=""){return`.${e.trim().replace(/([\.:!\/])/g,"\\$1").replace(/ /g,".")}`}function ne({swiper:e,extendParams:t,on:n,emit:s}){const i="swiper-pagination";let a;t({pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:e=>e,formatFractionTotal:e=>e,bulletClass:`${i}-bullet`,bulletActiveClass:`${i}-bullet-active`,modifierClass:`${i}-`,currentClass:`${i}-current`,totalClass:`${i}-total`,hiddenClass:`${i}-hidden`,progressbarFillClass:`${i}-progressbar-fill`,progressbarOppositeClass:`${i}-progressbar-opposite`,clickableClass:`${i}-clickable`,lockClass:`${i}-lock`,horizontalClass:`${i}-horizontal`,verticalClass:`${i}-vertical`,paginationDisabledClass:`${i}-disabled`}}),e.pagination={el:null,$el:null,bullets:[]};let r=0;function o(){return!e.params.pagination.el||!e.pagination.el||!e.pagination.$el||0===e.pagination.$el.length}function l(t,n){const{bulletActiveClass:s}=e.params.pagination;t[n]().addClass(`${s}-${n}`)[n]().addClass(`${s}-${n}-${n}`)}function d(){const t=e.rtl,n=e.params.pagination;if(o())return;const i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,d=e.pagination.$el;let c;const p=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?(c=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup),c>i-1-2*e.loopedSlides&&(c-=i-2*e.loopedSlides),c>p-1&&(c-=p),c<0&&"bullets"!==e.params.paginationType&&(c=p+c)):c=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===n.type&&e.pagination.bullets&&e.pagination.bullets.length>0){const s=e.pagination.bullets;let i,o,p;if(n.dynamicBullets&&(a=s.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),d.css(e.isHorizontal()?"width":"height",a*(n.dynamicMainBullets+4)+"px"),n.dynamicMainBullets>1&&void 0!==e.previousIndex&&(r+=c-(e.previousIndex-e.loopedSlides||0),r>n.dynamicMainBullets-1?r=n.dynamicMainBullets-1:r<0&&(r=0)),i=Math.max(c-r,0),o=i+(Math.min(s.length,n.dynamicMainBullets)-1),p=(o+i)/2),s.removeClass(["","-next","-next-next","-prev","-prev-prev","-main"].map((e=>`${n.bulletActiveClass}${e}`)).join(" ")),d.length>1)s.each((e=>{const t=f(e),s=t.index();s===c&&t.addClass(n.bulletActiveClass),n.dynamicBullets&&(s>=i&&s<=o&&t.addClass(`${n.bulletActiveClass}-main`),s===i&&l(t,"prev"),s===o&&l(t,"next"))}));else{const t=s.eq(c),a=t.index();if(t.addClass(n.bulletActiveClass),n.dynamicBullets){const t=s.eq(i),r=s.eq(o);for(let e=i;e<=o;e+=1)s.eq(e).addClass(`${n.bulletActiveClass}-main`);if(e.params.loop)if(a>=s.length){for(let e=n.dynamicMainBullets;e>=0;e-=1)s.eq(s.length-e).addClass(`${n.bulletActiveClass}-main`);s.eq(s.length-n.dynamicMainBullets-1).addClass(`${n.bulletActiveClass}-prev`)}else l(t,"prev"),l(r,"next");else l(t,"prev"),l(r,"next")}}if(n.dynamicBullets){const i=Math.min(s.length,n.dynamicMainBullets+4),r=(a*i-a)/2-p*a,o=t?"right":"left";s.css(e.isHorizontal()?o:"top",`${r}px`)}}if("fraction"===n.type&&(d.find(te(n.currentClass)).text(n.formatFractionCurrent(c+1)),d.find(te(n.totalClass)).text(n.formatFractionTotal(p))),"progressbar"===n.type){let t;t=n.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical";const s=(c+1)/p;let i=1,a=1;"horizontal"===t?i=s:a=s,d.find(te(n.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${i}) scaleY(${a})`).transition(e.params.speed)}"custom"===n.type&&n.renderCustom?(d.html(n.renderCustom(e,c+1,p)),s("paginationRender",d[0])):s("paginationUpdate",d[0]),e.params.watchOverflow&&e.enabled&&d[e.isLocked?"addClass":"removeClass"](n.lockClass)}function c(){const t=e.params.pagination;if(o())return;const n=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,i=e.pagination.$el;let a="";if("bullets"===t.type){let s=e.params.loop?Math.ceil((n-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;e.params.freeMode&&e.params.freeMode.enabled&&!e.params.loop&&s>n&&(s=n);for(let n=0;n<s;n+=1)t.renderBullet?a+=t.renderBullet.call(e,n,t.bulletClass):a+=`<${t.bulletElement} class="${t.bulletClass}"></${t.bulletElement}>`;i.html(a),e.pagination.bullets=i.find(te(t.bulletClass))}"fraction"===t.type&&(a=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):`<span class="${t.currentClass}"></span> / <span class="${t.totalClass}"></span>`,i.html(a)),"progressbar"===t.type&&(a=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):`<span class="${t.progressbarFillClass}"></span>`,i.html(a)),"custom"!==t.type&&s("paginationRender",e.pagination.$el[0])}function p(){e.params.pagination=Z(e,e.originalParams.pagination,e.params.pagination,{el:"swiper-pagination"});const t=e.params.pagination;if(!t.el)return;let n=f(t.el);0!==n.length&&(e.params.uniqueNavElements&&"string"==typeof t.el&&n.length>1&&(n=e.$el.find(t.el),n.length>1&&(n=n.filter((t=>f(t).parents(".swiper")[0]===e.el)))),"bullets"===t.type&&t.clickable&&n.addClass(t.clickableClass),n.addClass(t.modifierClass+t.type),n.addClass(e.isHorizontal()?t.horizontalClass:t.verticalClass),"bullets"===t.type&&t.dynamicBullets&&(n.addClass(`${t.modifierClass}${t.type}-dynamic`),r=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&n.addClass(t.progressbarOppositeClass),t.clickable&&n.on("click",te(t.bulletClass),(function(t){t.preventDefault();let n=f(this).index()*e.params.slidesPerGroup;e.params.loop&&(n+=e.loopedSlides),e.slideTo(n)})),Object.assign(e.pagination,{$el:n,el:n[0]}),e.enabled||n.addClass(t.lockClass))}function u(){const t=e.params.pagination;if(o())return;const n=e.pagination.$el;n.removeClass(t.hiddenClass),n.removeClass(t.modifierClass+t.type),n.removeClass(e.isHorizontal()?t.horizontalClass:t.verticalClass),e.pagination.bullets&&e.pagination.bullets.removeClass&&e.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&n.off("click",te(t.bulletClass))}n("init",(()=>{!1===e.params.pagination.enabled?h():(p(),c(),d())})),n("activeIndexChange",(()=>{(e.params.loop||void 0===e.snapIndex)&&d()})),n("snapIndexChange",(()=>{e.params.loop||d()})),n("slidesLengthChange",(()=>{e.params.loop&&(c(),d())})),n("snapGridLengthChange",(()=>{e.params.loop||(c(),d())})),n("destroy",(()=>{u()})),n("enable disable",(()=>{const{$el:t}=e.pagination;t&&t[e.enabled?"removeClass":"addClass"](e.params.pagination.lockClass)})),n("lock unlock",(()=>{d()})),n("click",((t,n)=>{const i=n.target,{$el:a}=e.pagination;if(e.params.pagination.el&&e.params.pagination.hideOnClick&&a&&a.length>0&&!f(i).hasClass(e.params.pagination.bulletClass)){if(e.navigation&&(e.navigation.nextEl&&i===e.navigation.nextEl||e.navigation.prevEl&&i===e.navigation.prevEl))return;const t=a.hasClass(e.params.pagination.hiddenClass);s(!0===t?"paginationShow":"paginationHide"),a.toggleClass(e.params.pagination.hiddenClass)}}));const h=()=>{e.$el.addClass(e.params.pagination.paginationDisabledClass),e.pagination.$el&&e.pagination.$el.addClass(e.params.pagination.paginationDisabledClass),u()};Object.assign(e.pagination,{enable:()=>{e.$el.removeClass(e.params.pagination.paginationDisabledClass),e.pagination.$el&&e.pagination.$el.removeClass(e.params.pagination.paginationDisabledClass),p(),c(),d()},disable:h,render:c,update:d,init:p,destroy:u})}function se({swiper:e,extendParams:t,on:n,emit:s}){let i;function r(){if(!e.size)return e.autoplay.running=!1,void(e.autoplay.paused=!1);const t=e.slides.eq(e.activeIndex);let n=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(n=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(i),i=g((()=>{let t;e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),t=e.slidePrev(e.params.speed,!0,!0),s("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?l():(t=e.slideTo(e.slides.length-1,e.params.speed,!0,!0),s("autoplay")):(t=e.slidePrev(e.params.speed,!0,!0),s("autoplay")):e.params.loop?(e.loopFix(),t=e.slideNext(e.params.speed,!0,!0),s("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?l():(t=e.slideTo(0,e.params.speed,!0,!0),s("autoplay")):(t=e.slideNext(e.params.speed,!0,!0),s("autoplay")),(e.params.cssMode&&e.autoplay.running||!1===t)&&r()}),n)}function o(){return void 0===i&&!e.autoplay.running&&(e.autoplay.running=!0,s("autoplayStart"),r(),!0)}function l(){return!!e.autoplay.running&&void 0!==i&&(i&&(clearTimeout(i),i=void 0),e.autoplay.running=!1,s("autoplayStop"),!0)}function d(t){e.autoplay.running&&(e.autoplay.paused||(i&&clearTimeout(i),e.autoplay.paused=!0,0!==t&&e.params.autoplay.waitForTransition?["transitionend","webkitTransitionEnd"].forEach((t=>{e.$wrapperEl[0].addEventListener(t,p)})):(e.autoplay.paused=!1,r())))}function c(){const t=a();"hidden"===t.visibilityState&&e.autoplay.running&&d(),"visible"===t.visibilityState&&e.autoplay.paused&&(r(),e.autoplay.paused=!1)}function p(t){e&&!e.destroyed&&e.$wrapperEl&&t.target===e.$wrapperEl[0]&&(["transitionend","webkitTransitionEnd"].forEach((t=>{e.$wrapperEl[0].removeEventListener(t,p)})),e.autoplay.paused=!1,e.autoplay.running?r():l())}function u(){e.params.autoplay.disableOnInteraction?l():(s("autoplayPause"),d()),["transitionend","webkitTransitionEnd"].forEach((t=>{e.$wrapperEl[0].removeEventListener(t,p)}))}function h(){e.params.autoplay.disableOnInteraction||(e.autoplay.paused=!1,s("autoplayResume"),r())}e.autoplay={running:!1,paused:!1},t({autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1,pauseOnMouseEnter:!1}}),n("init",(()=>{e.params.autoplay.enabled&&(o(),a().addEventListener("visibilitychange",c),e.params.autoplay.pauseOnMouseEnter&&(e.$el.on("mouseenter",u),e.$el.on("mouseleave",h)))})),n("beforeTransitionStart",((t,n,s)=>{e.autoplay.running&&(s||!e.params.autoplay.disableOnInteraction?e.autoplay.pause(n):l())})),n("sliderFirstMove",(()=>{e.autoplay.running&&(e.params.autoplay.disableOnInteraction?l():d())})),n("touchEnd",(()=>{e.params.cssMode&&e.autoplay.paused&&!e.params.autoplay.disableOnInteraction&&r()})),n("destroy",(()=>{e.$el.off("mouseenter",u),e.$el.off("mouseleave",h),e.autoplay.running&&l(),a().removeEventListener("visibilitychange",c)})),Object.assign(e.autoplay,{pause:d,run:r,start:o,stop:l})}var ie;document.addEventListener("DOMContentLoaded",(function(){ie=new Q(".swiper",{modules:[ee,ne,se],grabCursor:!0,autoHeight:!0,speed:1e3,loop:!0,autoplay:{delay:3e3,pauseOnMouseEnter:!0},pagination:{el:".swiper-pagination",clickable:!0,dynamicBullets:!0},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}});var e=document.querySelector(".burger-button"),t=document.querySelector(".nav");e.addEventListener("click",(function(){t.classList.toggle("menu-open"),e.classList.toggle("burger-button-open"),console.log(e)}));var n=document.querySelector(".reviews"),s=document.querySelector(".blogs");function i(e,t){e.addEventListener("click",(function(e){e.target.className!==t[0]&&e.target.className!==t[1]||e.target.classList.toggle(t[1].split(" ")[1]);for(var n=0;n<2;n++)ie[n].update()}))}i(n,["swiper-slide__description","swiper-slide__description swiper-slide__description-open"]),i(s,["blogs__text","blogs__text blog__text-open"])}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,